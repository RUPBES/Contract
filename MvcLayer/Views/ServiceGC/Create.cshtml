@using MvcLayer.Models;
@using Newtonsoft.Json;
@model List<MvcLayer.Models.ServiceGCViewModel>

@{
    int index = 0;
    var d = new List<ServiceGCViewModel>();

    if (TempData["serviceGC"] is string s)
    {
        d.AddRange(JsonConvert.DeserializeObject<List<ServiceGCViewModel>>(s));
    }
}
<style>
    .cont-table {
        overflow-x: scroll;
    }

    th,
    td {
        min-width: 250px;
    }
</style>
<h4>Услуги генподрядчика</h4>
<hr />
<form asp-action="Create" class="row">
    <div class="cont-table">
        <table class="table table-bordered table-striped">
            <tr>

                <th>Период</th>
                @foreach (var item in d)
                {
                    <td>
                        @item.Period?.ToString("MMM yyyy")
                        <input asp-for="@Model[index].Period" type="text" class="form-control" value="@item.Period" hidden />
                    </td>
                    index++;
                }
                @{
                    index = 0;
                }
            </tr>
            <tr>
                <th>Процент генуслуг</th>
                @foreach (var item in d)
                {
                    <td>
                        @item.ServicePercent
                        <input asp-for="@Model[index].ServicePercent" class="form-control" type="number" step="0.01" min="0" max="100" value="@item.ServicePercent" />
                    </td>
                    index++;
                }
                @{
                    index = 0;
                }
            </tr>
            <tr>
                <th>Сумма генуслуг</th>
                @foreach (var item in d)
                {
                    <td><input asp-for="@Model[index].Price" class="form-control" type="number" step="0.001" min="0" /></td>
                    index++;
                }
                @{
                    index = 0;
                }
            </tr>


            @foreach (var item in d)
            {
                <input asp-for="@Model[index].AmendmentId" hidden />
                <input asp-for="@Model[index].ContractId" hidden />
                <input asp-for="@Model[index].IsChange" hidden />

                index++;
            }

        </table>
    </div>
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-action="Index">Вернуться назад</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
