@using BusinessLayer.Models;
@model BusinessLayer.Models.IndexViewModel
@inject BusinessLayer.Interfaces.ContractInterfaces.IContractService Contract
@inject BusinessLayer.Interfaces.ContractInterfaces.ISWCostService SWCost
@inject BusinessLayer.Interfaces.ContractInterfaces.IScopeWorkService ScopeWork
@inject BusinessLayer.Interfaces.ContractInterfaces.ITypeWorkService TypeWork

@section Table{
    <div>
        <h1 style="text-align: center;">Список договоров</h1>
        <div class="contracts-list">
            <p>
                @if (ViewBag.IsEngineering)
                {
                    <button type="button" class="btn btn-success" onclick="location.href='@Url.Action("CreateEngin", "Contracts")'">Новый договор на оказание инжиниринговых услуг</button>
                    @using (Html.BeginForm("Engineerings", "Contracts", FormMethod.Get))
                    {
                        <form style="search-form" method="get">
                            <label style="search-form__text">Название объекта/номер договора:</label> @Html.TextBox("searchString", ViewData["CurrentFilter"] as string)
                            <input type="submit" value="Найти" />
                        </form>
                    }
                }
                @if (!ViewBag.IsEngineering)
                {
                    <button type="button" class="btn btn-success" onclick="location.href='@Url.Action("Create", "Contracts")'">Новый договор</button>
                    @using (Html.BeginForm("Index", "Contracts", FormMethod.Get))
                    {
                        <form style="search-form" method="get">
                            <label style="search-form__text">Название объекта/номер договора:</label> @Html.TextBox("searchString", ViewData["CurrentFilter"] as string)
                            <input type="submit" value="Найти" />
                        </form>
                    }

                }

            </p>
        </div>
        <div class="full-width">
            <table class="table table-main table-main-short table-bordered table-hover table-condensed" id="contractTable">
                <thead>
                    <tr class="tr-head-main-table">
                        @* <th><span class="table_span-num">          №                            </span></th> *@
                        <th>
                            <span class="table_span-numberanddate">
                                Номер и дата договора
                                @Html.ActionLink(" ", "Index", new { sortOrder = ViewData["DateSortParm"], currentFilter=ViewData["CurrentFilter"] } , new {id="arrayNumberanddate", @class="up"})
                            </span>
                        </th>
                        <th>
                            <span class="table_span-nameobject">
                                Наименование объекта
                                @Html.ActionLink("", "Index", new { sortOrder = ViewData["NameObjectSortParm"], currentFilter=ViewData["CurrentFilter"] } , new {id="arrayNameObject", @class="up"})

                            </span>
                        </th>
                        <th>
                            <span class="table_span-customer">
                                Заказчик
                                @Html.ActionLink("", "Index", new { sortOrder = ViewData["ClientSortParm"], currentFilter=ViewData["CurrentFilter"] }, new {id="arrayCustomer", @class="up"})
                            </span>
                        </th>
                        <th>
                            <span class="table_span-contractor">
                                Генподрядчик
                                @Html.ActionLink("", "Index", new { sortOrder = ViewData["GenSortParm"], currentFilter=ViewData["CurrentFilter"] }, new {id="arrayGeneralContractor", @class="up"})
                            </span>
                        </th>
                        <th>
                            <span class="table_span-deadlines">
                                Cроки
                                @Html.ActionLink(" ", "Index", new { sortOrder = ViewData["EnterSortParm"], currentFilter=ViewData["CurrentFilter"] }, new {id="arrayTerms", @class="up"})
                            </span>
                        </th>
                        <th><span class="table_span-conditions">    Условия оплаты              </span></th>
                       @*  <th><span class='table_span-material'>      Материалы (факт или смета)  </span></th> *@
                        <th><span class="table_span-currency">      Валюта                      </span></th>
                        <th><span class="table_span-work">          Виды работ по договору      </span></th>
                        <th><span class="table_span-contractprice"> Контрактная цена, с НДС     </span></th>
                        <th><span class="table_span-realization">   Выполнено на 01.01 тек. года</span></th>
                        <th><span class="table_span-remains">       Остаток                     </span></th>
                        <th><span class="table_span-volume">        Объем на текущий год        </span></th>
                        <th><span class="table_span-action">        Действия с договором        </span></th>
                    </tr>
                </thead>
                <tbody class="table_tbody">
                    @foreach (VContractDTO item in Model.Objects)
                    {

                        var ds = ScopeWork.Find(x => x.ContractId == item.Id && x.IsOwnForces != true && x.IsChange == true).LastOrDefault();
                        var resultScopeWork = ds is null ? ScopeWork.Find(x => x.ContractId == item.Id && x.IsOwnForces != true && x.IsChange != true).LastOrDefault() : ds;
                        var dateRange = DateTime.Now.Date.Year;

                        var sumPreviusYear = SWCost.Find(x => x.ScopeWorkId == resultScopeWork?.Id && x.Period < new DateTime(dateRange, 1, 1)).Sum(x => x.CostNds);
                        var sumThisYear = SWCost.Find(x => x.ScopeWorkId != null && x.ScopeWorkId == resultScopeWork?.Id && x.Period >= new DateTime(dateRange, 1, 1) && x.Period <= new DateTime(dateRange, 12, 31)).Sum(x => x.CostNds);
                        
                        <tr>
                            @*Номер и дата договора*@
                            <td>
                                <span class="table_span-numberanddate">
                                    <a asp-action="Details" asp-route-id="@item.Id">
                                        @item.Number от
                                        @item.Date?.ToShortDateString()
                                    </a>
                                </span>
                            </td>
                            @*Наименование объекта*@
                            <td>
                                <span class="table_span-nameobject">
                                    @item.NameObject
                                </span>
                            </td>
                            @*Заказчик*@
                            <td>
                                <span class="table_span-customer">
                                    @item.Client
                                </span>
                            </td>
                            @*Генподрядчик*@
                            <td>
                                <span class="table_span-contractor">
                                    @item.GenContractor
                                </span>
                            </td>
                            @*Сроки: выполнения работ - ввода *@
                            <td>
                                <span class="table_span-deadlines">
                                    <b>выполнения работ:</b><br>
                                    @item.DateBeginWork?.ToShortDateString() -  @item.DateEndWork?.ToShortDateString()<br>
                                    <b>ввода:</b><br>
                                    @item.EnteringTerm?.ToShortDateString()<br>
                                </span>
                            </td>
                            @*Условия оплаты: Аванс - Оплата*@
                            <td>
                                <span class="table_span-conditions">
                                    <a asp-action="GetByContractId" asp-controller="Prepayments" asp-route-contractId="@item?.Id">
                                        @item?.PaymentСonditionsAvans
                                    </a>
                                    <br />
                                    <br />
                                    <a asp-action="GetByContractId" asp-controller="Payments" asp-route-contractId="@item.Id">
                                        @item?.PaymentСonditionsRaschet@*  Оплата *@
                                    </a>
                                </span>
                            </td>
                            @*Материалы*@
                            @* <td>
                                <span class="table_span-material">
                                    <span class="icon link_to_page">
                                        <a asp-action="GetByContractId" asp-controller="Material" asp-route-contractId="@item?.Id"></a>
                                    </span>
                                </span>
                            </td> *@
                            @*Валюта*@
                            <td>
                                <span class="table_span-currency">
                                    @item.Сurrency
                                </span>
                            </td>
                            @*Виды работ по договору*@
                            <td>
                                <span class="table_span-work">
                                    @TypeWork?.Find(x=>x.TypeWorkContracts?.FirstOrDefault()?.ContractId == item?.Id)?.FirstOrDefault()?.Name
                                </span>
                            </td>
                            @*Контрактная цена*@
                            <td>
                                <span class="table_span-contractprice">
                                    @item.ContractPrice?.ToString("0.00")
                                </span>
                            </td>
                            @*Выполнено на начало года*@
                            <td>
                                <span class="table_span-realization">
                                    @sumPreviusYear?.ToString("0.00")
                                </span>
                            </td>
                            @*Остаток*@
                            <td>
                                <span class="table_span-remains">
                                    @{
                                        var ostatok = @item.ContractPrice
                                        - @sumPreviusYear - sumThisYear;
                                    }
                                    @ostatok?.ToString("0.00")
                                </span>
                            </td>
                            @*Объем*@
                            <td>
                                <span class="table_span-volume">@sumThisYear?.ToString("0.00")</span>
                            </td>
                            @*Действия с договором*@
                            <td>
                                <div class="icon view">
                                    <a asp-action="Details" asp-route-id="@item.Id"></a>
                                </div>
                                <div class="icon edit">
                                    <a asp-action="Edit" asp-route-id="@item.Id"></a>
                                </div>
                                <div class="icon delete">
                                    <a asp-action="Delete" asp-route-id="@item.Id"></a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <nav aria-label="Page navigation example" style="margin-top:10px;">
        <ul class="pagination justify-content-center">
            <li class="page-item previous_btn">
                @{
                    @if (Model.PageViewModel.PageNumber > 1)
                    {
                        <a class="page-link" asp-action="Index"
                           asp-route-pageNum="@(Model.PageViewModel.PageNumber - 1)"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]">
                            &lt;
                        </a>
                    }
                    @if (Model.PageViewModel.PageNumber <= 1)
                    {
                        <a class="page-link" asp-action="Index"
                           asp-route-pageNum="@(Model.PageViewModel.PageNumber - 1)"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           tabindex="-1" aria-disabled="true">
                            &lt;
                        </a>
                    }
                }

            </li>
            @{
                int counter = 1;
                int index = Model.PageViewModel.PageNumber <= 5 ? 1 : Model.PageViewModel.PageNumber;
                for (int i = index; i <= Model.PageViewModel.TotalPages; i++)
                {
                    <li class="page-item pag_btn_num">
                        <a class="page-link " asp-action="Index"
                           asp-route-pageNum="@i"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           value="@i">@i</a>
                    </li>
                    if (counter == 5)
                    {
                        counter = 1;
                        break;
                    }
                }
            }

            <li class="page-item next_btn">
                @{
                    @if (Model.PageViewModel.PageNumber <= Model.PageViewModel.TotalPages)
                    {
                        <a class="page-link" asp-action="Index"
                           asp-route-pageNum="@(Model.PageViewModel.PageNumber + 1)"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]">
                            &gt;
                        </a>
                    }
                    else
                    {
                        <a class="page-link" asp-action="Index"
                           asp-route-pageNum="@(Model.PageViewModel.PageNumber + 1)"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           aria-disabled="true">
                            &gt;
                        </a>
                    }
                }
            </li>
        </ul>
    </nav>
}

@section Scripts {
    <script type="text/javascript">

        class ArrayFun {

            constructor(url, element, urlDown, urlUp) {
                this.url = url;
                this.element = element;
                this.urlDoun = urlDown;
                this.urlUp = urlUp;
            }         
        }
        window.onload = function () {

            let actualUrl = window.location.search;
            let elementArrayNumberanddate = document.getElementById("arrayNumberanddate");
            let elementArrayNameObject = document.getElementById("arrayNameObject");
            let elementArrayCustomer = document.getElementById("arrayCustomer");
            let elementArrayGeneralContractor = document.getElementById("arrayGeneralContractor");
            let elementArrayTerms = document.getElementById("arrayTerms");

            if (actualUrl.includes('dateDesc')) {
                elementArrayNumberanddate.classList.remove("up")
                elementArrayNumberanddate.classList.add("up-down-active")
                elementArrayNumberanddate.classList.add('down')
            } else if (actualUrl.includes('date')) {
                elementArrayNumberanddate.classList.add("up-down-active")
            } else
                if (actualUrl.includes('nameObjectDesc')) {
                    elementArrayNameObject.classList.remove("up")
                    elementArrayNameObject.classList.add("up-down-active")
                    elementArrayNameObject.classList.add('down')
                } else if (actualUrl.includes('nameObject')) {
                    elementArrayNameObject.classList.add('up-down-active')
                }
                else
                    if (actualUrl.includes('clientDesc')) {
                        elementArrayCustomer.classList.remove("up")
                        elementArrayCustomer.classList.add("up-down-active")
                        elementArrayCustomer.classList.add('down')
                    } else if (actualUrl.includes('client')) {
                        elementArrayCustomer.classList.add('up-down-active')
                    }
                    else
                        if (actualUrl.includes('genContractorDesc')) {
                            elementArrayGeneralContractor.classList.remove("up")
                            elementArrayGeneralContractor.classList.add("up-down-active")
                            elementArrayGeneralContractor.classList.add('down')
                        } else if (actualUrl.includes('genContractor')) {
                            elementArrayGeneralContractor.classList.add('up-down-active')
                        } else
                            if (actualUrl.includes('dateEnterDesc')) {
                                elementArrayTerms.classList.remove("up")
                                elementArrayTerms.classList.add("up-down-active")
                                elementArrayTerms.classList.add('down')
                            } else if (actualUrl.includes('dateEnter')) {
                                elementArrayTerms.classList.add('up-down-active')
                            }
        };

        ////// Pagination
        paginationFunc(@Model.PageViewModel.PageNumber, @Model.PageViewModel.TotalPages);
        //////ENd pagination

        ///// вызываем PARTIAL VIEW для создания новой организации
        $("#addOrganization").click(function (e) {
            e.preventDefault();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("AddOrganization","Contracts")',
                dataType: 'html',
                data: $("#MainForm").serialize(),
                success: (function (result) {
                    $('#dialogContent').html(result);
                    $('#modDialog').modal('show');
                })
            });

        });

        ///// вызываем PARTIAL VIEW для добовления нового сотрудника

        $("#addEmployee").click(function (e) {
            e.preventDefault();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("AddEmployee","Contracts")',
                dataType: 'html',
                data: $("#MainForm").serialize(),
                success: (function (result) {
                    $('#dialogContent2').html(result);
                    $('#modDialog2').modal('show');
                })
            });

        });

        $("#addTypeWork").click(function (e) {
            e.preventDefault();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("AddTypeWork","Contracts")',
                dataType: 'html',
                data: $("#MainForm").serialize(),
                success: (function (result) {
                    $('#dialogContent3').html(result);
                    $('#modDialog3').modal('show');
                })
            });

        });
    </script>
}