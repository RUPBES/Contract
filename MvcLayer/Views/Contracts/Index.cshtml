@using BusinessLayer.Models;
@model BusinessLayer.Models.IndexViewModel
@inject BusinessLayer.Interfaces.ContractInterfaces.IContractService Contract

@section Table{
    <div>
        <h1>Список договоров</h1>
        <div class="contracts-list">
            <p>
                <button type="button" class="btn btn-success" onclick="location.href='@Url.Action("Create", "Contracts")'">Новый договор</button>
                @using (Html.BeginForm("Index", "Contracts", FormMethod.Get))
                {
                    <form>
                        Название объекта/номер договора: @Html.TextBox("query", ViewBag.CurrentFilter as string)
                        <input type="submit" value="Search" />
                    </form>
                }
            </p>
        </div>
        <div class="full-width">
            <table class="table table-main table-main-short table-bordered table-hover table-condensed" id="contractTable">
                <thead>
                    <tr class="tr-head-main-table">
                        <th>
                            <div class="table_span-num">
                                №
                            </div>
                        </th>
                        <th>
                            <div class="table_span-numberanddate">
                                @Html.ActionLink("Номер и дата договора", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter=ViewBag.CurrentFilter } , new {id="arrayTag", @class="up"})
                            </div>
                        </th>
                        <th>
                            <div class="table_span-nameobject">
                                @Html.ActionLink("Наименование объекта", "Index", new { sortOrder = ViewBag.NameObjectSortParm, currentFilter=ViewBag.CurrentFilter })
                            </div>
                        </th>
                        <th>
                            <div class="table_span-customer">
                                @Html.ActionLink("Заказчик", "Index", new { sortOrder = ViewBag.ClientSortParm, currentFilter=ViewBag.CurrentFilter })
                            </div>
                        </th>
                        <th>
                            <div class="table_span-contractor">
                            @Html.ActionLink("Генподрядчик", "Index", new { sortOrder = ViewBag.GenSortParm, currentFilter=ViewBag.CurrentFilter })
                            </div>
                        </th>
                        <th>
                            <div class="table_span-deadlines">
                            @Html.ActionLink("Cроки", "Index", new { sortOrder = ViewBag.EnterSortParm, currentFilter=ViewBag.CurrentFilter })
                            </div>
                        </th>
                        <th>
                            <span class="table_span-conditions">Условия оплаты</span>
                        </th>
                        <th>
                            <span class='table_span-material'>Материалы (факт или смета)</span>
                        </th>
                        <th>
                            <span class="table_span-currency">Валюта</span>
                        </th>
                        <th><span class="table_span-work">Виды работ по договору</span></th>
                        <th><span class="table_span-contractprice">Контрактная цена, с НДС</span></th>
                        <th><span class="table_span-realization">Выполнено на 01.01 тек. года</span></th>
                        <th><span class="table_span-remains">Остаток</span></th>
                        <th><span class="table_span-volume">Объем на текущий год</span></th>
                        <th><span class="table_span-action">Действия с договором</span></th>
                    </tr>
                </thead>
                <tbody class="table_tbody">
                    @foreach (VContractDTO item in Model.Objects)
                    {
                        <tr>
                            <td>
                                ?
                            </td>
                            @*Номер и дата договора*@
                            <td>
                                <span class="table_span-numberanddate">
                                    <a asp-action="Details" asp-route-id="@item.Id">
                                        @item.Number от
                                        @item.Date?.ToShortDateString()
                                    </a>
                                </span>
                            </td>
                            @*Наименование объекта*@
                            <td>
                                <span class="table_span-nameobject">
                                    @item.NameObject
                                </span>
                            </td>
                            @*Заказчик*@
                            <td>
                                <span class="table_span-customer">
                                    @item.Client
                                </span>
                            </td>
                            @*Генподрядчик*@
                            <td>
                                <span class="table_span-contractor">
                                    @item.GenContractor
                                </span>
                            </td>
                            @*Сроки: выполнения работ - ввода *@
                            <td>
                                <b>выполнения работ:</b><br>
                                @item.DateBeginWork?.ToShortDateString() -  @item.DateEndWork?.ToShortDateString()<br>
                                <b>ввода:</b><br>
                                @item.EnteringTerm?.ToShortDateString()<br>
                            </td>
                            @*Условия оплаты: Аванс - Оплата*@
                            <td>
                                <span class="table_span-avans">
                                    @*@Html.DisplayFor(modelItem => item.PaymentСonditionsAvans)*@
                                    @Html.ActionLink("Авансирование P11","","")

                                    @*@Html.DisplayFor(modelItem => item.PaymentСonditionsRaschet)*@
                                    @Html.ActionLink("Расчет P7","","")
                                </span>
                            </td>
                            @*Материалы*@
                            <td>
                                <span class="table_span-material">
                                    @Html.ActionLink("Материалы P15","","")
                                </span>
                            </td>
                            @*Валюта*@
                            <td>
                                <span class="table_span-currency">
                                    @item.Сurrency
                                </span>
                            </td>
                            @*Виды работ по договору*@
                            <td>
                                <span class="table_span-work">
                                    ?
                                </span>
                            </td>
                            @*Контрактная цена*@
                            <td>
                                <span>?</span>
                            </td>
                            @*Выполнено на начало года*@
                            <td>
                                <span>?</span>
                            </td>
                            @*Остаток*@
                            <td>
                                <span>?</span>
                            </td>
                            @*Объем*@
                            <td>
                                <span>?</span>
                            </td>
                            <td>
                                <a asp-action="Details" asp-route-id="@item.Id">
                                    <img src="~/images/Icon/details.png" width="50"
                                         height="50" alt="Подробнее">
                                </a>                     
                    </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="pages">
        @{
            if (Model.PageViewModel.HasPreviousPage)
            {
                <a class="btn btn-primary" asp-action="Index" asp-route-pageNum="@(Model.PageViewModel.PageNumber - 1)">&lt;</a>
            }
            else
            {
                <a class="btn btn-primary disabled" asp-action="Index" asp-route-pageNum="@(Model.PageViewModel.PageNumber - 1)">&lt;</a>
            }
        }
        <b> @Model.PageViewModel.PageNumber / @Model.PageViewModel.TotalPages</b>
        @{
            if (Model.PageViewModel.HasNextPage)
            {
                <a class="btn btn-primary" asp-action="Index" asp-route-pageNum="@(Model.PageViewModel.PageNumber + 1)">&gt;</a>
            }
            else
            {
                <a class="btn btn-primary disabled" asp-action="Index" asp-route-pageNum="@(Model.PageViewModel.PageNumber + 1)">&gt;</a>
            }
        }
    </div>

}

@section Scripts {
    <script type="text/javascript">


        window.onload = function () {
            let actualUrl = window.location.search;
            elementTag = document.getElementById("arrayTag");
            if (actualUrl.includes('dateDesc')) {
                elementTag.classList.remove("down")
                elementTag.classList.add('up')

            } else if (actualUrl.includes('date')) {
                elementTag.classList.remove("up")
                elementTag.classList.add('down')
            }
        };


        ///// вызываем PARTIAL VIEW для создания новой организации
        $("#addOrganization").click(function (e) {
            e.preventDefault();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("AddOrganization","Contracts")',
                dataType: 'html',
                data: $("#MainForm").serialize(),
                success: (function (result) {
                    $('#dialogContent').html(result);
                    $('#modDialog').modal('show');
                })
            });

        });

        ///// вызываем PARTIAL VIEW для добовления нового сотрудника

        $("#addEmployee").click(function (e) {
            e.preventDefault();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("AddEmployee","Contracts")',
                dataType: 'html',
                data: $("#MainForm").serialize(),
                success: (function (result) {
                    $('#dialogContent2').html(result);
                    $('#modDialog2').modal('show');
                })
            });

        });

        $("#addTypeWork").click(function (e) {
            e.preventDefault();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("AddTypeWork","Contracts")',
                dataType: 'html',
                data: $("#MainForm").serialize(),
                success: (function (result) {
                    $('#dialogContent3').html(result);
                    $('#modDialog3').modal('show');
                })
            });

        });

        function searchToggle(obj, evt) {
            var container = $(obj).closest('.search-wrapper');
            if (!container.hasClass('active')) {
                container.addClass('active');
                evt.preventDefault();
            }
            else if (container.hasClass('active') && $(obj).closest('.input-holder').length == 0) {
                container.removeClass('active');
                // clear input
                container.find('.search-input').val('');
            }
        }






    </script>
}