@using BusinessLayer.Helpers;
@model IEnumerable<MvcLayer.Models.Reports.GetCostDeviationScopeWorkViewModel>

@inject BusinessLayer.Interfaces.ContractInterfaces.IContractService Contract
@inject BusinessLayer.Interfaces.ContractInterfaces.IServiceCostService ScopeCostWork
@inject BusinessLayer.Interfaces.ContractInterfaces.ISWCostService SWCosts
@inject BusinessLayer.Interfaces.ContractInterfaces.IFormService Form
@inject BusinessLayer.Interfaces.ContractInterfaces.IOrganizationService Organization

@{
    ViewData["Title"] = "Мониторинг выполнения графика производства работ";
    DateTime startPeriod = new DateTime(4000, 1, 1);
    DateTime endPeriod = new DateTime(1000, 1, 1);
    foreach (var item in Model)
    {
        if (item.dateBeginWork != null)
        {
            if (startPeriod > item.dateBeginWork)
            {
                startPeriod = (DateTime)item.dateBeginWork;
            }
        }

        if (item.dateEndWork != null)
        {
            if (endPeriod < item.dateEndWork)
            {
                endPeriod = (DateTime)item.dateEndWork;
            }
        }
    }
}
<style>
    table {
        text-align: center;
    }

    .wrapper-table {
        width: 65vw;
        height: 75vh;
        overflow: scroll;
    }

        .wrapper-table tbody, td, tfoot, th, thead, tr {
            border-color: #373b3e;
            border-style: solid;
            border-width: 0;
        }

        .wrapper-table table td:first-child {
            position: sticky;
            z-index: 10;
            left: -1px;
            background-color: #adadad;
        }

        .wrapper-table table tr:first-child th:first-child {
            position: sticky;
            z-index: 1000;
            left: -1px;
            top: 0;
        }

        .wrapper-table thead {
            position: sticky;
            z-index: 20;
            left: 0;
            top: 0;
            opacity: 1;
            border-color: #373b3e;
        }

    .second-td-elem {
        /* z-index: 5 !important; */
        box-shadow: inset 0 0 0 9999px #bdbac3 !important;
        background-color: grey !important;
    }

    .Agreement{
        background-color: #ccf3ff !important;
    }

    .SubContract {
            background-color: #d8f3d8 !important;
    }

    .Multiple{
        background-color: lightsalmon !important;
    }

    .square {
        width: 30px;
        height: 30px;
        border: solid;
        margin-right: 0.7%;
    }

    .square_container {
        display: flex;
        font-weight: bold;
        margin-top: 1%;
        margin-bottom: 1%;
    }


    .dm-modal {
        background-color: lightsteelblue;
    }

    .close-btn {
        color: red
    }

        .close-btn::after {
            border: 2px solid #F00 !important;
        }

        .close-btn:hover::after {
            border-color: red !important;
            color: red !important;
            -webkit-transform: scale(1);
            -moz-transform: scale(1);
            -ms-transform: scale(1);
            transform: scale(1);
            font-weight: bold;
        }
</style>

<div class="dm-overlay">
    <div class="dm-table">
        <div class="dm-cell">
            <div class="dm-modal">
                <div class="top-modal-block">
                    <label class="my-modal-title">@ViewData["Title"]</label>
                    <a asp-action="GetCostDeviation" class="close-btn"></a>
                </div>         
                <div class="square_container">
                    <div class="square Agreement"></div>
                    <label> - Соглашения с филиалом </label>
                    <div class="square SubContract k-ml-1"></div>
                    <label> - Договор Субподряда </label>
                    <div class="square Multiple k-ml-1"></div>
                    <label> - Подобъект</label>
                </div>
                <hr class="modal-line" />
                <div class="wrapper-table">
                    <table class="table table-bordered table-main table-main-short wrapper-table ">
                        <thead class="table-dark text-center text-white align-top" style="position:sticky">
                            <tr>
                                <th rowspan="3">
                                    Номер и дата договора
                                </th>
                                <th rowspan="3">
                                    Наименование объекта
                                </th>
                                <th rowspan="3">
                                    Заказчик
                                </th>
                                <th rowspan="3">
                                    Генподрядчик (филиал-исполнитель по приказу)
                                </th>
                                <th rowspan="3">
                                    Субподрядчик (филиал-исполнитель по приказу)
                                </th>
                                <th rowspan="3">
                                    Сроки выполнения работ
                                </th>
                                <th rowspan="3">
                                    Срок ввода
                                </th>
                                <th rowspan="3">
                                    Валюта расчетов
                                </th>
                                <th rowspan="3">
                                    Контракная договорная цена, с учетом НДС
                                </th>
                                <th rowspan="3">
                                    Остаток по выполнению от стоимости контрактной цены
                                </th>
                                <th rowspan="3">
                                    Объем на текущий год
                                </th>
                                <th rowspan="3">
                                    Виды работ по договору
                                </th>
                                <th colspan="@((endPeriod.Year-startPeriod.Year)*36+(endPeriod.Month-startPeriod.Month+1)*3)">в том числе</th>
                                <th rowspan="3">
                                    Перевыполнение + (недовыполнение -) графика
                                </th>
                            </tr>
                            <tr>
                                @for (var item = startPeriod; Checker.LessOrEquallyFirstDateByMonth(item,endPeriod); item = item.AddMonths(1))
                                {
                                    <th colspan="3">
                                        @item.ToString("MMMM yyyy")
                                    </th>
                                }
                            </tr>
                            <tr>
                                @for (var item = startPeriod; Checker.LessOrEquallyFirstDateByMonth(item, endPeriod); item = item.AddMonths(1))
                                {
                                    <th>
                                        План
                                    </th>
                                    <th>
                                        Факт
                                    </th>
                                    <th>
                                        Отклонение
                                    </th>
                                }
                            </tr>
                        </thead>
                        <tbody style="max-height:70vh;">                            
                            @foreach (var item in Model.Where(m => 
                            m.typeContract == "Main"))
                            {
                                var deviationTotal = 0M;
                                <tr>
                                    <td id="example" rowspan="7">
                                        <a asp-action="DetailsCostDeviation" asp-route-contractId="@item.Id">
                                            @item?.number <br>
                                            от<br>
                                            @item?.dateContract?.ToShortDateString()
                                        </a>
                                    </td>
                                    <td rowspan="7">
                                        @item?.nameObject
                                    </td>
                                    <td rowspan="7">
                                        @item.client
                                    </td>
                                    <td rowspan="7">
                                        @item.genContractor
                                    </td>
                                    <td rowspan="7">
                                        @item.subContractor
                                    </td>
                                    <td rowspan="7">
                                        @item?.dateBeginWork?.ToShortDateString() - @item?.dateEndWork?.ToShortDateString()
                                    </td>
                                    <td rowspan="7">
                                        @item?.dateEnter?.ToShortDateString()
                                    </td>
                                    <td rowspan="7">
                                        @item?.currency
                                    </td>
                                    <td class="text-end" rowspan="7">
                                        @item.contractPrice?.ToString("N2")
                                    </td>
                                    <td class="text-end" rowspan="7">
                                        @item.remainingWork?.ToString("N2")
                                    </td>
                                    <td class="text-end" rowspan="7">
                                        @item.currentYearScopeWork?.ToString("N2")
                                    </td>
                                </tr>

                                <tr>
                                    <td class="second-td-elem">
                                        СМР
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.SmrCost.HasValue ? list.planScopeWork.SmrCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.SmrCost.HasValue ? list.factScopeWork.SmrCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (resultPlan != 0 && resultFact != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                                deviationTotal = 0M;
                                <tr>
                                    <td class="second-td-elem">
                                        ДОП. РАБОТЫ
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.
                                        Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.AdditionalCost.HasValue ? list.planScopeWork.AdditionalCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.AdditionalCost.HasValue ? list.factScopeWork.AdditionalCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (deviation != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                                deviationTotal = 0M;
                                <tr>
                                    <td class="second-td-elem">
                                        ПНР
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.
                                        Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.PnrCost.HasValue ? list.planScopeWork.PnrCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.PnrCost.HasValue ? list.factScopeWork.PnrCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (deviation != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                                deviationTotal = 0M;
                                <tr>
                                    <td class="second-td-elem">
                                        ОБОРУДОВАНИЕ
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.
                                        Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.EquipmentCost.HasValue ? list.planScopeWork.EquipmentCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.EquipmentCost.HasValue ? list.factScopeWork.EquipmentCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (deviation != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                                deviationTotal = 0M;
                                <tr>
                                    <td class="second-td-elem">
                                        ПРОЧИЕ РАБОТЫ И УСЛУГИ
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.
                                        Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.OtherExpensesCost.HasValue ? list.planScopeWork.OtherExpensesCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.OtherExpensesCost.HasValue ? list.factScopeWork.OtherExpensesCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (deviation != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                                deviationTotal = 0M;
                                <tr>
                                    <td class="second-td-elem">
                                        СТОИМОСТЬ МАТЕРИАЛОВ ЗАКАЗЧИКА
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.
                                        Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.MaterialCost.HasValue ? list.planScopeWork.MaterialCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.MaterialCost.HasValue ? list.factScopeWork.MaterialCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (deviation != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                            }

                            @foreach (var item in Model.Where(m =>
                            m.typeContract == "Agr"))
                            {
                                var deviationTotal = 0M;
                                <tr class="Agreement">
                                    <td id="example" rowspan="7">
                                        <a asp-action="DetailsCostDeviation" asp-route-contractId="@item.Id">
                                            @item?.number <br>
                                            от<br>
                                            @item?.dateContract?.ToShortDateString()
                                        </a>
                                    </td>
                                    <td rowspan="7">
                                        @item?.nameObject
                                    </td>
                                    <td rowspan="7">
                                        @item.client
                                    </td>
                                    <td rowspan="7">
                                        @item.genContractor
                                    </td>
                                    <td rowspan="7">
                                        @item.subContractor
                                    </td>
                                    <td rowspan="7">
                                        @item?.dateBeginWork?.ToShortDateString() - @item?.dateEndWork?.ToShortDateString()
                                    </td>
                                    <td rowspan="7">
                                        @item?.dateEnter?.ToShortDateString()
                                    </td>
                                    <td rowspan="7">
                                        @item?.currency
                                    </td>
                                    <td class="text-end" rowspan="7">
                                        @item.contractPrice?.ToString("N2")
                                    </td>
                                    <td class="text-end" rowspan="7">
                                        @item.remainingWork?.ToString("N2")
                                    </td>
                                    <td class="text-end" rowspan="7">
                                        @item.currentYearScopeWork?.ToString("N2")
                                    </td>
                                </tr>

                                <tr class="Agreement">
                                    <td class="second-td-elem">
                                        СМР
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.SmrCost.HasValue ? list.planScopeWork.SmrCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.SmrCost.HasValue ? list.factScopeWork.SmrCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (resultPlan != 0 && resultFact != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                                deviationTotal = 0M;
                                <tr class="Agreement">
                                    <td class="second-td-elem">
                                        ДОП. РАБОТЫ
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.
                                        Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.AdditionalCost.HasValue ? list.planScopeWork.AdditionalCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.AdditionalCost.HasValue ? list.factScopeWork.AdditionalCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (deviation != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                                deviationTotal = 0M;
                                <tr class="Agreement">
                                    <td class="second-td-elem">
                                        ПНР
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.
                                        Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.PnrCost.HasValue ? list.planScopeWork.PnrCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.PnrCost.HasValue ? list.factScopeWork.PnrCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (deviation != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                                deviationTotal = 0M;
                                <tr class="Agreement">
                                    <td class="second-td-elem">
                                        ОБОРУДОВАНИЕ
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.
                                        Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.EquipmentCost.HasValue ? list.planScopeWork.EquipmentCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.EquipmentCost.HasValue ? list.factScopeWork.EquipmentCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (deviation != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                                deviationTotal = 0M;
                                <tr class="Agreement">
                                    <td class="second-td-elem">
                                        ПРОЧИЕ РАБОТЫ И УСЛУГИ
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.
                                        Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.OtherExpensesCost.HasValue ? list.planScopeWork.OtherExpensesCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.OtherExpensesCost.HasValue ? list.factScopeWork.OtherExpensesCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (deviation != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                                deviationTotal = 0M;
                                <tr class="Agreement">
                                    <td class="second-td-elem">
                                        СТОИМОСТЬ МАТЕРИАЛОВ ЗАКАЗЧИКА
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.
                                        Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.MaterialCost.HasValue ? list.planScopeWork.MaterialCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.MaterialCost.HasValue ? list.factScopeWork.MaterialCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (deviation != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                            }

                            @foreach (var item in Model.Where(m =>
                            m.typeContract == "Sub"))
                            {
                               var deviationTotal = 0M;
                                <tr class="SubContract">
                                    <td id="example" rowspan="7">
                                        <a asp-action="DetailsCostDeviation" asp-route-contractId="@item.Id">
                                            @item?.number <br>
                                            от<br>
                                            @item?.dateContract?.ToShortDateString()
                                        </a>
                                    </td>
                                    <td rowspan="7">
                                        @item?.nameObject
                                    </td>
                                    <td rowspan="7">
                                        @item.client
                                    </td>
                                    <td rowspan="7">
                                        @item.genContractor
                                    </td>
                                    <td rowspan="7">
                                        @item.subContractor
                                    </td>
                                    <td rowspan="7">
                                        @item?.dateBeginWork?.ToShortDateString() - @item?.dateEndWork?.ToShortDateString()
                                    </td>
                                    <td rowspan="7">
                                        @item?.dateEnter?.ToShortDateString()
                                    </td>
                                    <td rowspan="7">
                                        @item?.currency
                                    </td>
                                    <td class="text-end" rowspan="7">
                                        @item.contractPrice?.ToString("N2")
                                    </td>
                                    <td class="text-end" rowspan="7">
                                        @item.remainingWork?.ToString("N2")
                                    </td>
                                    <td class="text-end" rowspan="7">
                                        @item.currentYearScopeWork?.ToString("N2")
                                    </td>
                                </tr>

                                <tr class="SubContract">
                                    <td class="second-td-elem">
                                        СМР
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.SmrCost.HasValue ? list.planScopeWork.SmrCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.SmrCost.HasValue ? list.factScopeWork.SmrCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (resultPlan != 0 && resultFact != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                                deviationTotal = 0M;
                                <tr class="SubContract">
                                    <td class="second-td-elem">
                                        ДОП. РАБОТЫ
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.
                                        Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.AdditionalCost.HasValue ? list.planScopeWork.AdditionalCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.AdditionalCost.HasValue ? list.factScopeWork.AdditionalCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (deviation != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                                deviationTotal = 0M;
                                <tr class="SubContract">
                                    <td class="second-td-elem">
                                        ПНР
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.
                                        Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.PnrCost.HasValue ? list.planScopeWork.PnrCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.PnrCost.HasValue ? list.factScopeWork.PnrCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (deviation != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                                deviationTotal = 0M;
                                <tr class="SubContract">
                                    <td class="second-td-elem">
                                        ОБОРУДОВАНИЕ
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.
                                        Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.EquipmentCost.HasValue ? list.planScopeWork.EquipmentCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.EquipmentCost.HasValue ? list.factScopeWork.EquipmentCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (deviation != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                                deviationTotal = 0M;
                                <tr class="SubContract">
                                    <td class="second-td-elem">
                                        ПРОЧИЕ РАБОТЫ И УСЛУГИ
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.
                                        Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.OtherExpensesCost.HasValue ? list.planScopeWork.OtherExpensesCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.OtherExpensesCost.HasValue ? list.factScopeWork.OtherExpensesCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (deviation != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                                deviationTotal = 0M;
                                <tr class="SubContract">
                                    <td class="second-td-elem">
                                        СТОИМОСТЬ МАТЕРИАЛОВ ЗАКАЗЧИКА
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.
                                        Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.MaterialCost.HasValue ? list.planScopeWork.MaterialCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.MaterialCost.HasValue ? list.factScopeWork.MaterialCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (deviation != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                            }

                            @foreach (var item in Model.Where(m =>
                            m.typeContract == "Obj"))
                            {
                                var deviationTotal = 0M;
                                <tr class="Multiple">
                                    <td id="example" rowspan="7">
                                        <a asp-action="DetailsCostDeviation" asp-route-contractId="@item.Id">
                                            @item?.number <br>
                                            от<br>
                                            @item?.dateContract?.ToShortDateString()
                                        </a>
                                    </td>
                                    <td rowspan="7">
                                        @item?.nameObject
                                    </td>
                                    <td rowspan="7">
                                        @item.client
                                    </td>
                                    <td rowspan="7">
                                        @item.genContractor
                                    </td>
                                    <td rowspan="7">
                                        @item.subContractor
                                    </td>
                                    <td rowspan="7">
                                        @item?.dateBeginWork?.ToShortDateString() - @item?.dateEndWork?.ToShortDateString()
                                    </td>
                                    <td rowspan="7">
                                        @item?.dateEnter?.ToShortDateString()
                                    </td>
                                    <td rowspan="7">
                                        @item?.currency
                                    </td>
                                    <td class="text-end" rowspan="7">
                                        @item.contractPrice?.ToString("N2")
                                    </td>
                                    <td class="text-end" rowspan="7">
                                        @item.remainingWork?.ToString("N2")
                                    </td>
                                    <td class="text-end" rowspan="7">
                                        @item.currentYearScopeWork?.ToString("N2")
                                    </td>
                                </tr>

                                <tr class="Multiple">
                                    <td class="second-td-elem">
                                        СМР
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.SmrCost.HasValue ? list.planScopeWork.SmrCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.SmrCost.HasValue ? list.factScopeWork.SmrCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (resultPlan != 0 && resultFact != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                                deviationTotal = 0M;
                                <tr class="Multiple">
                                    <td class="second-td-elem">
                                        ДОП. РАБОТЫ
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.
                                        Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.AdditionalCost.HasValue ? list.planScopeWork.AdditionalCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.AdditionalCost.HasValue ? list.factScopeWork.AdditionalCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (deviation != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                                deviationTotal = 0M;
                                <tr class="Multiple">
                                    <td class="second-td-elem">
                                        ПНР
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.
                                        Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.PnrCost.HasValue ? list.planScopeWork.PnrCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.PnrCost.HasValue ? list.factScopeWork.PnrCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (deviation != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                                deviationTotal = 0M;
                                <tr class="Multiple">
                                    <td class="second-td-elem">
                                        ОБОРУДОВАНИЕ
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.
                                        Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.EquipmentCost.HasValue ? list.planScopeWork.EquipmentCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.EquipmentCost.HasValue ? list.factScopeWork.EquipmentCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (deviation != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                                deviationTotal = 0M;
                                <tr class="Multiple">
                                    <td class="second-td-elem">
                                        ПРОЧИЕ РАБОТЫ И УСЛУГИ
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.
                                        Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.OtherExpensesCost.HasValue ? list.planScopeWork.OtherExpensesCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.OtherExpensesCost.HasValue ? list.factScopeWork.OtherExpensesCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (deviation != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                                deviationTotal = 0M;
                                <tr class="Multiple">
                                    <td class="second-td-elem">
                                        СТОИМОСТЬ МАТЕРИАЛОВ ЗАКАЗЧИКА
                                    </td>
                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth((DateTime)iterator, (DateTime)endPeriod); iterator = iterator.AddMonths(1))
                                    {
                                        var list = item.listScopeWork.
                                        Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator)).FirstOrDefault();
                                        <td class="text-end">
                                            @{
                                                var resultPlan = 0M;
                                                if (list != null)
                                                {
                                                    if (list.planScopeWork != null)
                                                    {
                                                        resultPlan = list.planScopeWork.MaterialCost.HasValue ? list.planScopeWork.MaterialCost.Value : 0;
                                                    }
                                                }
                                                @if (resultPlan != 0)
                                                {
                                                    <span>@resultPlan.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                var resultFact = 0M;
                                                if (list != null)
                                                {
                                                    if (list.factScopeWork != null)
                                                    {
                                                        resultFact = list.factScopeWork.MaterialCost.HasValue ? list.factScopeWork.MaterialCost.Value : 0;
                                                    }
                                                }
                                                @if (resultFact != 0)
                                                {
                                                    <span>@resultFact.ToString("N2")</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-end">
                                            @{
                                                decimal? deviation = 0;
                                                if (resultPlan != 0 && resultFact != 0)
                                                    deviation = resultPlan - resultFact;
                                                else deviation = 0;
                                                deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                            }
                                            @if (deviation != 0)
                                            {
                                                <span>@deviation?.ToString("N2")</span>
                                            }
                                        </td>
                                    }
                                    <td class="text-end">
                                        @if (deviationTotal != 0)
                                        {
                                            <span>@deviationTotal.ToString("N2")</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>                
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script type="text/javascript">
        window.addEventListener('load', () => {
            setWidth();
        });
        window.addEventListener('resize', function (event) {
            setWidth();
        }, true);
        function setWidth() {
            var width = document.getElementById('example').offsetWidth;
            var all = $(".second-td-elem")
            width = width - 2;
            for (var i = 0; i < all.length; i++) {
                all[i].style.left = width + "px";
            }
        }
    </script>
}