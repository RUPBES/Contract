@using BusinessLayer.Models;
@using MvcLayer.Models;
@using Newtonsoft.Json;
@inject BusinessLayer.Interfaces.ContractInterfaces.IScopeWorkService Scope
@model MvcLayer.Models.ScopeWorkViewModel

@{
    if (ViewBag.IsEngin == null)
    {
        ViewData["Title"] = "Объем работ";
    }
    else
    {
        ViewData["Title"] = "Объем услуг";
    }
    int index = 0;
    int backId = 0;
    if ((int)ViewData["returnContractId"] == 0)
        backId = (int)ViewData["contractId"];
    else backId = (int)ViewData["returnContractId"];

    ScopeWorkDTO prevSWCost = new ScopeWorkDTO();
    if (Model.ChangeScopeWorkId != null)
    {
        prevSWCost = Scope.GetById((int)Model.ChangeScopeWorkId);
    }
    else
    {
        prevSWCost = null;
    }

    decimal? sumSmr = 0;
    decimal? sumPnr = 0;
    decimal? sumEquip = 0;
    decimal? sumOther = 0;
}

<style>
    .cont-table {
        overflow-x: scroll;
    }

    th,
    td {
        min-width: 250px;
    }

    .dm-modal {
        width: 1400px;
        background-color: lightsteelblue;
    }

    .form-group {
        text-align: right;
    }
    .input-group {
        width: auto !important;
    }
    .input_result {
        width: 150px;
    }

    .input_block--result {
        display: flex
    }

    .result_block {
        display: flex;
        justify-content: space-between;
    }

    .close-btn {
        color: red
    }

        .close-btn::after {
            border: 2px solid #F00 !important;
        }

        .close-btn:hover::after {
            border-color: red !important;
            color: red !important;
            -webkit-transform: scale(1);
            -moz-transform: scale(1);
            -ms-transform: scale(1);
            transform: scale(1);
            font-weight: bold;
        }

    .table-main tr:nth-child(2n) {
        background-color: #ecf2f9 !important;
    }
</style>
<div class="dm-overlay">
    <div class="dm-table">
        <div class="dm-cell">
            <div class="dm-modal">
                <div class="top-modal-block">
                    <label class="my-modal-title">@ViewData["Title"]</label>
                    @if (backId != null && backId > 0)
                    {
                        <a asp-controller="Contracts" asp-action="Details" asp-route-id="@backId" class="close-btn"></a>
                    }
                    @if (backId == null || backId == 0)
                    {
                        <a asp-controller="Contracts" asp-action="" class="close-btn"></a>
                    }
                </div>
                <hr class="modal-line" style="width:980px" />
                <form asp-action="Create" class="row" asp-route-returnContractId="@ViewData["returnContractId"]">
                    <div class="cont-table">
                        <table class="table table-bordered table-main table-hover">
                            <tr>
                                <th>Период</th>
                                @foreach (var item in Model.SWCosts)
                                {
                                    <th>
                                        @item.Period?.ToString("MMMM yyyy")
                                        <input asp-for="SWCosts[index].Period" type="text" class="form-control" value="@item.Period" hidden />
                                    </th>
                                    index++;
                                }
                                @{
                                    index = 0;
                                }
                            </tr>
                            @if (ViewBag.IsEngin == null)
                            {
                                <tr>
                                    <th>Стоимость СМР</th>
                                    @foreach (var item in Model.SWCosts)
                                    {
                                        if (prevSWCost != null)
                                        {
                                            var obj = prevSWCost.SWCosts.Where(s => s.Period == item.Period).Select(s => s.SmrCost).FirstOrDefault();
                                            if (obj != null)
                                            {
                                                sumSmr += obj;
                                                <td class="text-end"><input name="SWCosts[@index].SmrCost" type="text" class="form-control costs_contract cost SmrCost" value="@obj" /></td>
                                            }
                                            else
                                            {
                                                <td class="text-end"><input name="SWCosts[@index].SmrCost" type="text" class="form-control costs_contract cost SmrCost" value="" /></td>
                                            }
                                        }
                                        else
                                        {
                                            <td class="text-end"><input name="SWCosts[@index].SmrCost" type="text" class="form-control costs_contract cost SmrCost" value="" /></td>
                                        }
                                        index++;
                                    }
                                    @{
                                        index = 0;
                                    }
                                </tr>
                                <tr>
                                    <th>Стоимость ПНР</th>
                                    @foreach (var item in Model.SWCosts)
                                    {
                                        if (prevSWCost != null)
                                        {
                                            var obj = prevSWCost.SWCosts.Where(s => s.Period == item.Period).Select(s => s.PnrCost).FirstOrDefault();
                                            if (obj != null)
                                            {
                                                sumPnr += obj;
                                                <td class="text-end"><input name="SWCosts[@index].PnrCost" type="text" class="form-control cost PnrCost" value="@obj" /></td>
                                            }
                                            else
                                            {
                                                <td class="text-end"><input name="SWCosts[@index].PnrCost" type="text" class="form-control cost PnrCost" value="" /></td>
                                            }
                                        }
                                        else
                                        {
                                            <td class="text-end"><input name="SWCosts[@index].PnrCost" type="text" class="form-control cost PnrCost" value="" /></td>
                                        }
                                        index++;
                                    }
                                    @{
                                        index = 0;
                                    }
                                </tr>
                                <tr>
                                    <th>Стоимость оборудования</th>
                                    @foreach (var item in Model.SWCosts)
                                    {
                                        if (prevSWCost != null)
                                        {
                                            var obj = prevSWCost.SWCosts.Where(s => s.Period == item.Period).Select(s => s.EquipmentCost).FirstOrDefault();
                                            if (obj != null)
                                            {
                                                sumEquip += obj;
                                                <td class="text-end"><input name="SWCosts[@index].EquipmentCost" type="text" class="form-control cost EquipmentCost" value="@obj" /></td>
                                            }
                                            else
                                            {
                                                <td class="text-end"><input name="SWCosts[@index].EquipmentCost" type="text" class="form-control cost EquipmentCost" value="" /></td>
                                            }
                                        }
                                        else
                                        {
                                            <td class="text-end"><input name="SWCosts[@index].EquipmentCost" type="text" class="form-control cost EquipmentCost" value="" /></td>
                                        }
                                        index++;
                                    }
                                    @{
                                        index = 0;
                                    }
                                </tr>
                                <tr>
                                    <th>Стоимость прочих работ и услуг</th>
                                    @foreach (var item in Model.SWCosts)
                                    {
                                        if (prevSWCost != null)
                                        {
                                            var obj = prevSWCost.SWCosts.Where(s => s.Period == item.Period).Select(s => s.OtherExpensesCost).FirstOrDefault();
                                            if (obj != null)
                                            {
                                                sumOther += obj;
                                                <td class="text-end"><input name="SWCosts[@index].OtherExpensesCost" type="text" class="form-control cost OtherExpensesCost" value="@obj" /></td>
                                            }
                                            else
                                            {
                                                <td class="text-end"><input name="SWCosts[@index].OtherExpensesCost" type="text" class="form-control cost OtherExpensesCost" value="" /></td>
                                            }
                                        }
                                        else
                                        {
                                            <td class="text-end"><input name="SWCosts[@index].OtherExpensesCost" type="text" class="form-control cost OtherExpensesCost" value="" /></td>
                                        }
                                        index++;
                                    }
                                    @{
                                        index = 0;
                                    }
                                </tr>
                                <tr>
                                    <th>Стоимость доп. работ</th>
                                    @foreach (var item in Model.SWCosts)
                                    {
                                        if (prevSWCost != null)
                                        {
                                            var obj = prevSWCost.SWCosts.Where(s => s.Period == item.Period).Select(s => s.AdditionalCost).FirstOrDefault();
                                            if (obj != null)
                                            {
                                                <td class="text-end"><input name="SWCosts[@index].AdditionalCost" type="text" class="form-control cost" value="@obj" /></td>
                                            }
                                            else
                                            {
                                                <td class="text-end"><input name="SWCosts[@index].AdditionalCost" type="text" class="form-control cost" value="" /></td>
                                            }
                                        }
                                        else
                                        {
                                            <td class="text-end"><input name="SWCosts[@index].AdditionalCost" type="text" class="form-control cost" value="" /></td>
                                        }
                                        index++;
                                    }
                                    @{
                                        index = 0;
                                    }
                                </tr>
                                <tr>
                                    <th>Стоимость материалов заказчика (справочно)</th>
                                    @foreach (var item in Model.SWCosts)
                                    {
                                        if (prevSWCost != null)
                                        {
                                            var obj = prevSWCost.SWCosts.Where(s => s.Period == item.Period).Select(s => s.MaterialCost).FirstOrDefault();
                                            if (obj != null)
                                            {
                                                <td class="text-end"><input name="SWCosts[@index].MaterialCost" type="text" class="form-control cost" value="@obj" /></td>
                                            }
                                            else
                                            {
                                                <td class="text-end"><input name="SWCosts[@index].MaterialCost" type="text" class="form-control cost" value="" /></td>
                                            }
                                        }
                                        else
                                        {
                                            <td class="text-end"><input name="SWCosts[@index].MaterialCost" type="text" class="form-control cost" value="" /></td>
                                        }
                                        index++;
                                    }
                                    @{
                                        index = 0;
                                    }
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    <th>Объем услуг</th>
                                    @foreach (var item in Model.SWCosts)
                                    {
                                        if (prevSWCost != null)
                                        {
                                            var obj = prevSWCost.SWCosts.Where(s => s.Period == item.Period).Select(s => s.SmrCost).FirstOrDefault();
                                            if (obj != null)
                                            {
                                                <td class="text-end"><input name="SWCosts[@index].SmrCost" type="text" class="form-control costs_contract cost SmrCost" value="@obj" /></td>
                                            }
                                            else
                                            {
                                                <td class="text-end"><input name="SWCosts[@index].SmrCost" type="text" class="form-control costs_contract cost SmrCost" value="" /></td>
                                            }
                                        }
                                        else
                                        {
                                            <td class="text-end"><input name="SWCosts[@index].SmrCost" type="text" class="form-control costs_contract cost SmrCost" value="" /></td>
                                        }
                                        index++;
                                    }
                                    @{
                                        index = 0;
                                    }
                                </tr>
                            }
                            @foreach (var item in Model.SWCosts)
                            {
                                <input asp-for="SWCosts[index].IsOwnForces" hidden />
                                index++;
                            }

                            <input asp-for="ContractId" hidden />
                            <input asp-for="IsOwnForces" hidden />
                            <input asp-for="IsChange" hidden />
                            <input asp-for="AmendmentId" hidden />
                            <input asp-for="ChangeScopeWorkId" hidden />
                        </table>
                    </div>
                    <div class="form-group mt-3 result_block">
                        @{
                            var contractPrice = (decimal)ViewData["contractPrice"];
                            var sum = sumSmr + sumPnr + sumEquip + sumOther;
                            var result = contractPrice - sum;
                            <div class="input_block--result">
                                <div class="input-group">
                                    <span class="input-group-text">Контрактная цена:</span>

                                    <input class="input_result" id="sumTarget" value="@contractPrice.ToString("N2")" readonly />
                                </div>
                                <div class="input-group">
                                    <span class="input-group-text">Введенная плановая сумма:</span>
                                    <input class="input_result" id="sumTargetWork" value="@sum?.ToString("N2")" readonly />
                                </div>
                                <div class="input-group">
                                    <span class="input-group-text">Разница </span>
                                    <input class=" input_result" id="result" value="@result?.ToString("N2")" readonly />
                                </div>

                            </div>
                        }
                        <span id="text_error" class="text_error"></span>

                        <a class="btn btn-success btn_load" asp-action="GetScopeWorkByFile" asp-route-returnContractId="@ViewData["returnContractId"]" asp-route-contractId="@ViewData["contractId"]">Загрузить из Excel</a>

                        <input type="submit" value="Создать" id="createButton" class="btn btn-primary" />

                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

    }
    <script>
        $(function ($) {
            var allCost = $(".cost")
            for (let el of allCost) {
                digits_float(el)
            }
            $('body').on('input', '.cost', function (e) {
                digits_float(this);
            });
        });
        check();
        $('body').on('input', '.SmrCost', function (e) {
            digits_float(this);
            check();
        });
        $('body').on('input', '.PnrCost', function (e) {
            digits_float(this);
            check();
        });
        $('body').on('input', '.EquipmentCost', function (e) {
            digits_float(this);
            check();
        });
        $('body').on('input', '.OtherExpensesCost', function (e) {
            digits_float(this);
            check();
        });

        function check() {
            let btn = document.getElementById("createButton");

            let SmrCost = $(".SmrCost");
            let PnrCost = $(".PnrCost");
            let EquipmentCost = $(".EquipmentCost");
            let OtherExpensesCost = $(".OtherExpensesCost");
            let sum = 0;
            let result = 0;
            for (let item of SmrCost) {
                const regExp = /,/g;
                let num = item.value.replaceAll(' ', '').replace(regExp, '.')
                sum += +num;
            }
            for (let item of PnrCost) {
                const regExp = /,/g;
                let num = item.value.replaceAll(' ', '').replace(regExp, '.')
                sum += +num;
            }
            for (let item of EquipmentCost) {
                const regExp = /,/g;
                let num = item.value.replaceAll(' ', '').replace(regExp, '.')
                sum += +num;
            }
            for (let item of OtherExpensesCost) {
                const regExp = /,/g;
                let num = item.value.replaceAll(' ', '').replace(regExp, '.')
                sum += +num;
            }
            sum = Math.round(sum*100)/100;
            const regExp = /,/g;
            let o = document.querySelector("#sumTarget").value.replace(regExp, '.');
            o = o.replace(/\s+/g, '');
            let contractPrice = +o;

            result = contractPrice - sum;
            if (result === 0) {
                $("#result").focus(function () { $(this).addClass("focused") });
                btn.removeAttribute('disabled')
                $('#text_error').text('')



            } else {
                btn.setAttribute('disabled', true)
                $('#text_error').text('Сумма не сходится!')

            }
            $("#sumTargetWork").val(sum);
            $("#result").val(result.toFixed(2));
        }
    </script>
}