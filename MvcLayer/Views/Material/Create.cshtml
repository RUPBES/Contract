@using MvcLayer.Models;
@using Newtonsoft.Json;
@model MvcLayer.Models.MaterialViewModel

@{
    int index = 0;
    var d = new MaterialViewModel();
    ViewData["Title"] = "Стоимость материалов";
    if (TempData["material"] is string s)
    {
        d = JsonConvert.DeserializeObject<MaterialViewModel>(s);
    }
    bool isFact = d.IsFact == true ? true : false;

    string actionName = isFact ? "EditMaterial" : "Create";
    int contrId = d?.ContractId is not null && d?.ContractId > 0 ? (int)d?.ContractId : 0;
}
<style>
    .cont-table {
        overflow-x: scroll;
    }

    th,
    td {
        min-width: 250px;
    }
</style>

<div class="dm-overlay">
    <div class="dm-table">
        <div class="dm-cell">
            <div class="dm-modal">
                <div class="top-modal-block">
                    <label class="my-modal-title">@ViewData["Title"] </label>
                    @if (@contrId != null && @contrId > 0)
                    {
                        <a asp-controller="Contracts" asp-action="Details" asp-route-id="@contrId" class="close-btn"></a>
                    }
                    @if (@contrId == null || @contrId == 0)
                    {
                        <a asp-controller="Contracts" asp-action="" class="close-btn"></a>
                    }
                </div>
                <hr class="modal-line" />
                <form asp-action=@actionName class="row">
                    <div class="cont-table">
                        <table class="table table-bordered table-striped">
                            <tr>

                                <th>Период</th>
                                @foreach (var item in d.MaterialCosts)
                                {
                                    <td>
                                        @item.Period?.ToString("MMM yyyy")
                                        <input asp-for="MaterialCosts[index].Period" type="text" class="form-control" value="@item.Period" hidden />
                                    </td>
                                    index++;
                                }
                                @{
                                    index = 0;
                                }
                            </tr>
                            <tr>
                                <th>Планируемая стоимость материалов</th>
                                @foreach (var item in d.MaterialCosts)
                                {
                                    <td><input asp-for="MaterialCosts[index].Price" class="form-control cost" type="number" step="0.01" min="0" /></td>
                                    index++;
                                }
                                @{
                                    index = 0;
                                }
                            </tr>

                            @* @foreach (var item in d.MaterialCosts)
                            { *@

                                <input asp-for="AmendmentId" hidden />
                                <input asp-for="ContractId" hidden />
                                <input asp-for="IsChange" hidden />
                                <input asp-for="ChangeMaterialId" hidden />
@* 
                                index++;
                            } *@

                        </table>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        <script>
            $(function ($) {
                $('body').on('input', '.cost', function (e) {
                    digits_float(this);
                });
                digits_float('.cost');
            });
        </script>
    }
}
