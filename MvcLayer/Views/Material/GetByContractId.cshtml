@model IEnumerable<MvcLayer.Models.MaterialViewModel>
@inject BusinessLayer.Interfaces.ContractInterfaces.IContractService Contract
@inject BusinessLayer.Interfaces.ContractInterfaces.IMaterialCostService MaterialCost

@{
    ViewData["Title"] = string.Empty;
    int backId = 0;
    if ((int)ViewData["returnContractId"] == 0)
        backId = (int)ViewData["contractId"];
    else backId = (int)ViewData["returnContractId"];
    var id = (int)ViewData["contractId"];
    if (id != 0)
    {
        var number = Contract.GetById((int)id).Number;
        ViewData["Title"] = $"Стоимость материалов согласно договора № {number}";
    }
}



<div class="dm-overlay">
    <div class="dm-table">
        <div class="dm-cell">
            <div class="dm-modal">
                <div class="top-modal-block">
                    <label class="my-modal-title">@ViewData["Title"]</label>
                    @if (backId != null && backId > 0)
                    {
                        <a asp-controller="Contracts" asp-action="Details" asp-route-id="@backId" class="close-btn"></a>
                    }
                    @if (backId == null || backId == 0)
                    {
                        <a asp-controller="Contracts" asp-action="" class="close-btn"></a>
                    }
                </div>
                <hr class="modal-line" />
                <div style=" overflow-x:scroll;">
                    <table class="table">
                        @*!!!план без изменений!!*@
                        @foreach (var item in Model)
                        {
                            <tr>
                                <th>
                                    Период
                                </th>
                                @foreach (var item1 in MaterialCost.Find(x => x.IsFact != true && x.MaterialId == item.Id))
                                {
                                    <th>
                                        @item1.Period?.ToString("MMM yyyy")
                                    </th>
                                }
                            </tr>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.Price)
                                </th>
                                @foreach (var item1 in MaterialCost.Find(x => x.IsFact != true && x.MaterialId == item.Id))
                            {
                                    <td class="text-end">
                                        @item1.Price?.ToString("N2")
                                </td>
                            }
                        </tr>                        
                        @*!!!факт!!*@
                        
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.FactPrice)
                            </th>
                                @foreach (var item1 in MaterialCost.Find(x => x.IsFact == true && x.MaterialId == item.Id))
                            {
                                    <td class="text-end">
                                        @item1.Price?.ToString("N2")
                                </td>
                            }
                        </tr>
                        }
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
