@using BusinessLayer.Helpers;
@model IEnumerable<MvcLayer.Models.Reports.GetCostDeviationMaterialViewModel>
@inject BusinessLayer.Interfaces.ContractInterfaces.IContractService Contract
@inject BusinessLayer.Interfaces.ContractInterfaces.IMaterialService Material

@{
    ViewData["Title"] = "Мониторинг отклонения стоимости по материалам";

    DateTime startPeriod = new DateTime(4000, 1, 1);
    DateTime endPeriod = new DateTime(1000, 1, 1);
    foreach (var item in Model)
    {
        if (item.dateBeginWork != null)
        {
            if (startPeriod > item.dateBeginWork)
            {
                startPeriod = (DateTime)item.dateBeginWork;
            }
        }

        if (item.dateEndWork != null)
        {
            if (endPeriod < item.dateEndWork)
            {
                endPeriod = (DateTime)item.dateEndWork;
            }
        }
    }
}

<style>
    table {
        text-align: center;
    }

    .wrapper-table {
        width: 65vw;
        height: 75vh;
        overflow: scroll;
    }

        .wrapper-table tbody, td, tfoot, th, thead, tr {
            border-color: #373b3e;
            border-style: solid;
            border-width: 0;
        }

        .wrapper-table table td:first-child {
            position: sticky;
            z-index: 10;
            left: -1px;
            background-color: #adadad;
        }

        .wrapper-table table tr:first-child th:first-child {
            position: sticky;
            z-index: 20;
            left: -1px;
            top: 0;
        }

        .wrapper-table thead {
            position: sticky;
            z-index: 20;
            left: 0;
            top: 0;
            opacity: 1;
            border-color: #373b3e;
        }

    .second-td-elem {
        /* z-index: 5 !important; */
        box-shadow: inset 0 0 0 9999px #bdbac3 !important;
        background-color: grey !important;
    }

    .Agreement {
        background-color: #ccf3ff !important;
    }

    .SubContract {
        background-color: #d8f3d8 !important;
    }

    .Multiple {
        background-color: lightsalmon !important;
    }

    .square {
        width: 20px;
        height: 20px;
    }
</style>

<div class="dm-overlay">
    <div class="dm-table">
        <div class="dm-cell">
            <div class="dm-modal">
                <div class="top-modal-block">
                    <label class="my-modal-title">@ViewData["Title"]</label>
                    <a asp-controller="Material" asp-action="GetCostDeviation" class="close-btn"></a>
                </div>
                <div style="display:flex">
                    <div class="square Agreement"></div>
                    <label> - Соглашения с филиалом </label>
                    <div class="square SubContract k-ml-1"></div>
                    <label> - Договор Субподряда </label>
                    <div class="square Multiple k-ml-1"></div>
                    <label> - Подобъект</label>
                </div>
                <hr class="modal-line" />
                <div class="wrapper-table">
                    <table class="table table-bordered table-main table-main-short">
                        <thead class="table-dark text-center text-white align-top" style="position:sticky">
                            <tr>
                                <th rowspan="3">
                                    Номер и дата договора
                                </th>
                                <th rowspan="3">
                                    Наименование объекта
                                </th>
                                <th rowspan="3">
                                    Сметная стоимость материалов по договору
                                </th>
                                <th colspan="@(((endPeriod.Year - startPeriod.Year) * 12 + ((endPeriod.Month - startPeriod.Month) + 1))*3)">в том числе</th>
                                <th rowspan="3">
                                    Отклонение всего
                                </th>
                            </tr>
                            <tr>
                                @for (var item = startPeriod; Checker.LessOrEquallyFirstDateByMonth(item, endPeriod); item = item.AddMonths(1))
                                {
                                    <th colspan="3">
                                        @item.ToString("MMMM yyyy")
                                    </th>
                                }
                            </tr>
                            <tr>
                                @for (var item = startPeriod; Checker.LessOrEquallyFirstDateByMonth(item, endPeriod); item = item.AddMonths(1))
                                {
                                    <th>
                                        План
                                    </th>
                                    <th>
                                        Факт
                                    </th>
                                    <th>
                                        Отклонение
                                    </th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Where(m => m.typeContract == "Main"))
                            {
                                var deviationTotal = 0M;
                                <tr>
                                    <td>
                                        @item?.number <br>
                                        от<br>
                                        @item?.dateContract?.ToShortDateString()
                                    </td>
                                    <td>
                                        @item?.nameObject
                                    </td>
                                    <td class="text-end">
                                        @item?.materialCost?.ToString("N2")
                                    </td>

                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth(iterator, endPeriod);
                                   iterator = iterator.AddMonths(1))
                                    {
                                        var itemMaterial = item.listMaterials.Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator))
                                        .FirstOrDefault();
                                        if (itemMaterial != null)
                                        {
                                            decimal? plan = 0, fact = 0;
                                            <td class="text-end">
                                                @if (itemMaterial.plan != null)
                                                {
                                                    plan = itemMaterial.plan;
                                                }
                                                @plan?.ToString("N2")
                                            </td>
                                            <td class="text-end">
                                                @if (itemMaterial.fact != null)
                                                {
                                                    fact = itemMaterial.fact;
                                                }
                                                @fact?.ToString("N2")
                                            </td>
                                            <td class="text-end">
                                                @{
                                                    var deviation = plan - fact;
                                                    deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                                }
                                                @deviation?.ToString("N2")
                                            </td>
                                        }
                                        else
                                        {
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                        }
                                    }
                                    <td class="text-end">
                                        @deviationTotal.ToString("N2")
                                    </td>
                                </tr>
                            }

                            @foreach (var item in Model.Where(m => m.typeContract == "Agr"))
                            {
                                var deviationTotal = 0M;
                                <tr class="Agreement">
                                    <td>
                                        @item?.number <br>
                                        от<br>
                                        @item?.dateContract?.ToShortDateString()
                                    </td>
                                    <td>
                                        @item?.nameObject
                                    </td>
                                    <td class="text-end">
                                        @item?.materialCost?.ToString("N2")
                                    </td>

                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth(iterator, endPeriod);
                                   iterator = iterator.AddMonths(1))
                                    {
                                        var itemMaterial = item.listMaterials.Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator))
                                        .FirstOrDefault();
                                        if (itemMaterial != null)
                                        {
                                            decimal? plan = 0, fact = 0;
                                            <td class="text-end">
                                                @if (itemMaterial.plan != null)
                                                {
                                                    plan = itemMaterial.plan;
                                                }
                                                @plan?.ToString("N2")
                                            </td>
                                            <td class="text-end">
                                                @if (itemMaterial.fact != null)
                                                {
                                                    fact = itemMaterial.fact;
                                                }
                                                @fact?.ToString("N2")
                                            </td>
                                            <td class="text-end">
                                                @{
                                                    var deviation = plan - fact;
                                                    deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                                }
                                                @deviation?.ToString("N2")
                                            </td>
                                        }
                                        else
                                        {
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                        }
                                    }
                                    <td class="text-end">
                                        @deviationTotal.ToString("N2")
                                    </td>
                                </tr>
                            }

                            @foreach (var item in Model.Where(m => m.typeContract == "Sub"))
                            {
                                var deviationTotal = 0M;
                                <tr class="SubContract">
                                    <td>
                                        @item?.number <br>
                                        от<br>
                                        @item?.dateContract?.ToShortDateString()
                                    </td>
                                    <td>
                                        @item?.nameObject
                                    </td>
                                    <td class="text-end">
                                        @item?.materialCost?.ToString("N2")
                                    </td>

                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth(iterator, endPeriod);
                                   iterator = iterator.AddMonths(1))
                                    {
                                        var itemMaterial = item.listMaterials.Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator))
                                        .FirstOrDefault();
                                        if (itemMaterial != null)
                                        {
                                            decimal? plan = 0, fact = 0;
                                            <td class="text-end">
                                                @if (itemMaterial.plan != null)
                                                {
                                                    plan = itemMaterial.plan;
                                                }
                                                @plan?.ToString("N2")
                                            </td>
                                            <td class="text-end">
                                                @if (itemMaterial.fact != null)
                                                {
                                                    fact = itemMaterial.fact;
                                                }
                                                @fact?.ToString("N2")
                                            </td>
                                            <td class="text-end">
                                                @{
                                                    var deviation = plan - fact;
                                                    deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                                }
                                                @deviation?.ToString("N2")
                                            </td>
                                        }
                                        else
                                        {
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                        }
                                    }
                                    <td class="text-end">
                                        @deviationTotal.ToString("N2")
                                    </td>
                                </tr>
                            }

                            @foreach (var item in Model.Where(m => m.typeContract == "Obj"))
                            {                                
                                var deviationTotal = 0M;
                                <tr class="Multiple">
                                    <td>
                                        @item?.number <br>
                                        от<br>
                                        @item?.dateContract?.ToShortDateString()
                                    </td>
                                    <td>
                                        @item?.nameObject
                                    </td>
                                    <td class="text-end">
                                        @item?.materialCost?.ToString("N2")
                                    </td>

                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth(iterator, endPeriod);
                                   iterator = iterator.AddMonths(1))
                                    {
                                        var itemMaterial = item.listMaterials.Where(x => Checker.EquallyDateByMonth((DateTime)x.period, iterator))
                                        .FirstOrDefault();
                                        if (itemMaterial != null)
                                        {
                                            decimal? plan = 0, fact = 0;
                                            <td class="text-end">
                                                @if (itemMaterial.plan != null)
                                                {
                                                    plan = itemMaterial.plan;
                                                }
                                                @plan?.ToString("N2")
                                            </td>
                                            <td class="text-end">
                                                @if (itemMaterial.fact != null)
                                                {
                                                    fact = itemMaterial.fact;
                                                }
                                                @fact?.ToString("N2")
                                            </td>
                                            <td class="text-end">
                                                @{
                                                    var deviation = plan - fact;
                                                    deviationTotal += deviation is not null ? (decimal)deviation : 0M;
                                                }
                                                @deviation?.ToString("N2")
                                            </td>
                                        }
                                        else
                                        {
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                        }
                                    }
                                    <td class="text-end">
                                        @deviationTotal.ToString("N2")
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>