@model IEnumerable<MvcLayer.Models.PrepaymentViewModel>
@inject BusinessLayer.Interfaces.ContractInterfaces.IContractService Contract
@inject BusinessLayer.Interfaces.ContractInterfaces.IPrepaymentService Prepayment
@inject BusinessLayer.Interfaces.ContractInterfaces.IPrepaymentFactService PrepFact
@inject BusinessLayer.Interfaces.ContractInterfaces.IPrepaymentPlanService PrepPlan


@{
    ViewData["Title"] = string.Empty;
    var contractId = ViewBag.contractId;
    int backId = 0;
    if (ViewBag.returnContractId == 0)
        backId = ViewBag.contractId;
    else backId = ViewBag.returnContractId;
    if (contractId is not null)
    {
        var number = Contract.GetById((int)contractId).Number;
        ViewData["Title"] = $"Авансы по договору № {number}";
    }
    bool isAdmin = true;
    var actionReturn = ViewBag.IsEngineering == true ? "Engineerings" : null;
    DateTime startPeriod = new DateTime(4000, 1, 1);
    DateTime endPeriod = new DateTime(1000, 1, 1);
    foreach (var item in Model)
    {
        foreach (var item2 in item.PrepaymentPlans)
        {
            if (item2.Period < startPeriod) startPeriod = (DateTime)item2.Period;
            if (item2.Period > endPeriod) endPeriod = (DateTime)item2.Period;
        }
    }
}

<div class="dm-overlay">
    <div class="dm-table">
        <div class="dm-cell">
            <div class="dm-modal">
                <div class="top-modal-block">
                    <label class="my-modal-title">@ViewData["Title"]</label>
                    @if (backId != null && backId > 0)
                    {
                        <a asp-controller="Contracts" asp-action="Details" asp-route-id="@backId" class="close-btn"></a>
                    }
                    @if (backId == null || backId == 0)
                    {
                        <a asp-controller="Contracts" asp-action="@actionReturn" class="close-btn"></a>
                    }
                </div>
                <hr class="modal-line" />
                <div class="modal-overflow-70">
                    <table class="table table-striped table-bordered">
                        @*!!!план без изменений!!*@
                        @foreach (var prepayment in Model.Where(x => x.IsChange != true))
                        {
                            var plansNoChange = PrepPlan.Find(x => x.PrepaymentId == prepayment.Id);
                            <tr>
                                <th>
                                    Основание
                                </th>

                                @for (var iterator = startPeriod; iterator <= endPeriod; iterator = iterator.AddMonths(1))
                                {
                                    <th>
                                        @iterator.ToString("MMM yyyy")
                                    </th>
                                }
                            </tr>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.CurrentValue)
                                </th>
                                @for (var iterator = startPeriod; iterator <= endPeriod; iterator = iterator.AddMonths(1))
                                {
                                    <td class="text-end">
                                        @{
                                            var obj = plansNoChange.Where(p => p.Period == iterator).FirstOrDefault();
                                            if (obj != null)
                                            {
                                                <span>@obj.CurrentValue?.ToString("N2")</span>
                                            }
                                        }
                                    </td>
                                }
                            </tr>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.TargetValue)
                                </th>
                                @for (var iterator = startPeriod; iterator <= endPeriod; iterator = iterator.AddMonths(1))
                                {
                                    <td class="text-end">
                                        @{
                                            var obj = plansNoChange.Where(p => p.Period == iterator).FirstOrDefault();
                                            if (obj != null)
                                            {
                                                <span>@obj.TargetValue?.ToString("N2")</span>
                                            }
                                        }
                                    </td>
                                }
                            </tr>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.WorkingOutValue)
                                </th>
                                @for (var iterator = startPeriod; iterator <= endPeriod; iterator = iterator.AddMonths(1))
                                {
                                    <td class="text-end">
                                        @{
                                            var obj = plansNoChange.Where(p => p.Period == iterator).FirstOrDefault();
                                            if (obj != null)
                                            {
                                                <span>@obj.WorkingOutValue?.ToString("N2")</span>
                                            }
                                        }
                                    </td>
                                }
                            </tr>
                        }


                        @foreach (var item2 in Model.Where(x => x.IsChange == true))
                        {
                            var plansChange = PrepPlan.Find(x => x.PrepaymentId == item2.Id);

                            <tr>
                                <th class="text-uppercase fw-light">
                                    cогласно графику платежей в редакции ДС <b>@Prepayment?.GetAmendmentByPrepaymentId(item2.Id)?.Number </b>к договору
                                </th>
                                @for (var iterator = startPeriod; iterator <= endPeriod; iterator = iterator.AddMonths(1))
                                {
                                    <th>
                                        @iterator.ToString("MMM yyyy")
                                    </th>
                                }

                            </tr>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.CurrentValue)
                                </th>
                                @for (var iterator = startPeriod; iterator <= endPeriod; iterator = iterator.AddMonths(1))
                                {
                                    <td class="text-end">
                                        @{
                                            var obj = plansChange.Where(p => p.Period == iterator).FirstOrDefault();
                                            if (obj != null)
                                            {
                                                <span>@obj.CurrentValue?.ToString("N2")</span>
                                            }
                                        }
                                    </td>
                                }
                            </tr>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.TargetValue)
                                </th>
                                @for (var iterator = startPeriod; iterator <= endPeriod; iterator = iterator.AddMonths(1))
                                {
                                    <td class="text-end">
                                        @{
                                            var obj = plansChange.Where(p => p.Period == iterator).FirstOrDefault();
                                            if (obj != null)
                                            {
                                                <span>@obj.TargetValue?.ToString("N2")</span>
                                            }
                                        }
                                    </td>
                                }
                            </tr>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.WorkingOutValue)
                                </th>
                                @for (var iterator = startPeriod; iterator <= endPeriod; iterator = iterator.AddMonths(1))
                                {
                                    <td class="text-end">
                                        @{
                                            var obj = plansChange.Where(p => p.Period == iterator).FirstOrDefault();
                                            if (obj != null)
                                            {
                                                <span>@obj.WorkingOutValue?.ToString("N2")</span>
                                            }
                                        }
                                    </td>
                                }
                            </tr>
                        }

                        @*!!!факт!!*@
                        @{
                            var prepaymentId = Model?.FirstOrDefault(x => x.IsChange != true)?.Id;
                        }
                        @{
                            var fact = PrepFact.Find(x => x.PrepaymentId == prepaymentId);
                            <tr>
                                <th class="text-uppercase fw-light">
                                    Получено фактически
                                </th>
                                @for (var iterator = startPeriod; iterator <= endPeriod; iterator = iterator.AddMonths(1))
                                {
                                    <th>
                                        @iterator.ToString("MMM yyyy")
                                        @if (fact.Any(f => f.Period == iterator))
                                        {
                                            var item = fact.Where(x => x.Period == iterator).FirstOrDefault();
                                            <a class="icon edit" asp-action="EditFact" asp-controller="Prepayments"
                                               asp-route-id="@item.Id" asp-route-contractId="@contractId" asp-route-returnContractId="@ViewBag.returnContractId"></a>
                                        }
                                        else
                                        {
                                            <a class="icon view_to_add_pages" asp-action="ChoosePeriod" asp-controller="Prepayments"
                                               asp-route-contractId="@contractId" asp-route-isFact="true" asp-route-returnContractId="@ViewBag.returnContractId"></a>
                                        }
                                    </th>
                                }
                            </tr>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.CurrentValueFact)
                                </th>
                                @for (var iterator = startPeriod; iterator <= endPeriod; iterator = iterator.AddMonths(1))
                                {
                                    <td class="text-end">
                                        @{
                                            var obj = fact.Where(p => p.Period == iterator).FirstOrDefault();
                                            if (obj != null)
                                            {
                                                <span>@obj.CurrentValue?.ToString("N2")</span>
                                            }
                                        }
                                    </td>
                                }
                            </tr>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.TargetValueFact)
                                </th>
                                @for (var iterator = startPeriod; iterator <= endPeriod; iterator = iterator.AddMonths(1))
                                {
                                    <td class="text-end">
                                        @{
                                            var obj = fact.Where(p => p.Period == iterator).FirstOrDefault();
                                            if (obj != null)
                                            {
                                                <span>@obj.TargetValue?.ToString("N2")</span>
                                            }
                                        }
                                    </td>
                                }
                            </tr>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.WorkingOutValueFact)
                                </th>
                                @for (var iterator = startPeriod; iterator <= endPeriod; iterator = iterator.AddMonths(1))
                                {
                                    <td class="text-end">
                                        @{
                                            var obj = fact.Where(p => p.Period == iterator).FirstOrDefault();
                                            if (obj != null)
                                            {
                                                <span>@obj.WorkingOutValue?.ToString("N2")</span>
                                            }
                                        }
                                    </td>
                                }
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
