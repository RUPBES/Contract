@using DatabaseLayer.Models.PRO
@model List<Estimate>
@{
    ViewData["Title"] = "Загрузка данных по смете";
    int backId = 0;
    if ((int)ViewData["returnContractId"] == 0)
        backId = (int)ViewData["contractId"];
    else backId = (int)ViewData["returnContractId"];

}
<style>
    .demo-section {
        display: flex;
        flex-direction: row;
    }

    .dm-modal {
        background-color: lightsteelblue;
    }

    .close-btn {
        color: red
    }

        .close-btn::after {
            border: 2px solid #F00 !important;
        }

        .close-btn:hover::after {
            border-color: red !important;
            color: red !important;
            -webkit-transform: scale(1);
            -moz-transform: scale(1);
            -ms-transform: scale(1);
            transform: scale(1);
            font-weight: bold;
        }

    .divForm_modal {
        overflow: auto;
    }

    .chosen-container-single .chosen-single {
        margin-left: 0% !important;
    }

    .estimate__group-container {
        flex-wrap: nowrap !important;
    }

    .input_estimate {
        padding: 0rem .75rem !important;
    }

</style>
<input id="contractId" value="@ViewData["contractId"]" hidden />
<input id="EstimateId" hidden />
<div class="dm-overlay">
    <div class="dm-table">
        <div class="dm-cell">
            <div class="dm-modal" style="max-width:80vw; min-height: 30vh">
                <div class="top-modal-block">
                    <label class="my-modal-title">@ViewData["Title"]</label>
                    <label id="HeaderLabel" class="my-modal-title">Этап 1: Выбор сметы</label>
                    @if (backId > 0)
                    {
                        <a asp-controller="Estimate" asp-action="Index" asp-route-contractId="@backId" asp-route-contractId="@backId" class="close-btn"></a>
                    }
                    @if (backId == 0)
                    {
                        <a asp-controller="Contracts" asp-action="" class="close-btn"></a>
                    }
                </div>
                <hr class="modal-line">
                <div id="divForm" class="divForm_modal">
                    <button onclick="ChangeView(1)">Добавить смету</button>
                    <button onclick="ChangeView(2)">Редактирование</button>
                    <button onclick="ChangeView(3)">Добавить измененный чертеж к смете</button>
                    <div id="Edit" class="input-group estimate__group-container hidden" hidden>
                        <label class="input-group-text input_estimate" for="NumberEstimate">№ Сметы</label>
                        <select id="NumberEstimate" class="js-chosen form-control">
                            <option selected disabled>Выберите смету для изменения</option>
                            @foreach (var item in Model)
                            {
                                <option value="@item.Id">@item.BuildingName/@item.DrawingsName/@item.DrawingsKit/@item.Number</option>
                            }
                        </select>
                    </div>
                    <div id="AddToEstimate" class="input-group estimate__group-container" hidden>
                        <div class="demo-section input-group mb-2 mt-2">
                            <label class="input-group-text">Комплект чертежей</label>
                            <input class="form-control" id="drawKit" />
                        </div>
                        <label class="input-group-text input_estimate" for="NumberEstimate">№ Сметы</label>
                        <select id="NumberEstimateAdd" class="js-chosen form-control">
                            <option selected disabled>Выберите смету для добавления</option>
                            @foreach (var item in Model)
                            {
                                <option value="@item.Id">@item.BuildingName/@item.DrawingsName/@item.DrawingsKit/@item.Number</option>
                            }
                        </select>
                        <button onclick="AddCopyEstimate()">Добавить</button>
                    </div>
                    <form id="files" method="post" enctype="multipart/form-data">
                        <div id="example" style="min-width:400px; max-width: 800px;">
                            <div class="demo-section input-group mb-2 mt-2">
                                <label class="input-group-text" for="dateEstimateId">Дата получения сметы</label>
                                <input class="form-control" name="date" type="text" id="dateEstimateId" />
                            </div>
                            <div class="demo-section input-group mb-2">
                                <input class="form-control" name="files" type="file" aria-label="files" multiple="multiple" />
                                <div class="input-group-append">
                                    <button type="submit" class="btn btn-success">Загрузить</button>
                                </div>
                            </div>
                            <div class="progress" id="container_progress" role="progressbar" aria-label="Default striped example" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100" style="display:none">
                                <div class="progress-bar progress-bar-striped bg-success progress-bar-animated" id="pBar" style="width: 0%"></div>
                            </div>
                        </div>
                    </form>
                </div>
                <div id="ListOfSheet"></div>
                <div id="result" style="color: green;"></div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        $("#dateEstimateId").datepicker({
            format: "d MM yyyy",
            language: "ru",
            calendarWeeks: true,
            autoclose: true,
            keyboardNavigation: false,
            assumeNearbyYear: true,
            toggleActive: true
        });

        $("#NumberEstimate").on('change', function (e) {
            var number = this.value;
            $("#EstimateId").val(number);
            $.ajax({
                type: 'POST',
                data: { EstimateId: number },
                url: '@Url.Action("GetDrawingsFiles", "Estimate")',
                success: function (viewData) {
                    $("#divForm").html(viewData)
                    $("#ListOfSheet").html("")
                    $("#HeaderLabel").text("Этап 2: Загрузка чертежей")
                },
                error: function (error) {
                    var errorMes = error.responseText.substring(18, error.responseText.indexOf("\r"));
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("ShowError", "Parse")',
                        data: { message: errorMes },
                        dataType: 'html',
                        success: function (data) {
                            $("#result").html(data)
                        }
                    });
                }
            });
        });

        function AddCopyEstimate() {
            var drawKit = $("#drawKit").val();
            if (drawKit == "") {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ShowError", "Parse")',
                    data: { message: "Введите наименование комплекта чертежей." },
                    dataType: 'html',
                    success: function (data) {
                        $("#result").html(data)
                    }
                });
            }
            else {
                var number = $('#NumberEstimateAdd').val();
                console.log(number)
                $.ajax({
                    type: 'POST',
                    data: { EstimateId: number, DrawningKit: drawKit },
                    url: '@Url.Action("AddCopyEstimate", "Estimate")',
                    success: function (estimateNumber) {
                        $("#EstimateId").val(estimateNumber);
                        $.ajax({
                            type: 'POST',
                            data: { EstimateId: estimateNumber },
                            url: '@Url.Action("GetDrawingsFiles", "Estimate")',
                            success: function (viewData) {
                                $("#divForm").html(viewData)
                                $("#ListOfSheet").html("")
                                $("#HeaderLabel").text("Этап 2: Загрузка чертежей")
                            },
                            error: function (error) {
                                var errorMes = error.responseText.substring(18, error.responseText.indexOf("\r"));
                                $.ajax({
                                    type: 'POST',
                                    url: '@Url.Action("ShowError", "Parse")',
                                    data: { message: errorMes },
                                    dataType: 'html',
                                    success: function (data) {
                                        $("#result").html(data)
                                    }
                                });
                            }
                        });
                    },
                    error: function (error) {
                        var errorMes = error.responseText.substring(18, error.responseText.indexOf("\r"));
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("ShowError", "Parse")',
                            data: { message: errorMes },
                            dataType: 'html',
                            success: function (data) {
                                $("#result").html(data)
                            }
                        });
                    }
                });
            }
        }
        $("form#files").submit(function () {
            let contractId = $("#contractId").val();
            let dateEstimate = $("#dateEstimateId").val();

            let formData = new FormData(files);
            event.preventDefault()
            function setProgress(e) {
                if (e.lengthComputable) {
                    $("#container_progress").removeAttr('style');
                    var complete = e.loaded / e.total;
                    var completeFloor = Math.floor(complete * 100)
                    $("#pBar").attr('style', `width:${completeFloor}%`);
                    $("#pBar").text(`${completeFloor}%`);
                }
            }
            $.ajax({
                xhr: function () {
                    var xhr = new window.XMLHttpRequest();
                    xhr.upload.addEventListener("progress", setProgress, false);
                    xhr.addEventListener("progress", setProgress, false);
                    return xhr;
                },
                type: 'POST',
                url: '@Url.Action("DownloadFile", "Parse")',
                data: formData,
                success: function (data) {
                    let path = data;
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetCountPagesInExcel", "Parse")',
                        data: { path: path },
                        dataType: 'html',
                        success: function (data) {
                            $("#ListOfSheet").html(data)
                            $('#GetDataFromFile').click(function () {
                                let ex = $("#ex").val();
                                $.ajax({
                                    type: 'POST',
                                    url: '@Url.Action("GetEstimateData", "Estimate")',
                                    data: { path: path, contractId: contractId, page: ex, date: dateEstimate },
                                    success: function (data) {
                                        $("#EstimateId").val(data)
                                        $("#result").html("<h3>Данные из локальной сметы загружены.</h3>")
                                        $.ajax({
                                            type: 'POST',
                                            url: '@Url.Action("GetDrawingsFiles", "Estimate")',
                                            data: { EstimateId: data },
                                            success: function (viewData) {
                                                $("#divForm").html(viewData)
                                                $("#ListOfSheet").html("")
                                                $("#HeaderLabel").text("Этап 2: Загрузка чертежей")
                                            },
                                            error: function (error) {
                                                var errorMes = error.responseText.substring(18, error.responseText.indexOf("\r"));
                                                $.ajax({
                                                    type: 'POST',
                                                    url: '@Url.Action("ShowError", "Parse")',
                                                    data: { message: errorMes },
                                                    dataType: 'html',
                                                    success: function (data) {
                                                        $("#result").html(data)
                                                    }
                                                });
                                            }
                                        });
                                    },
                                    error: function (error) {
                                        var errorMes = error.responseText.substring(18, error.responseText.indexOf("\r"));
                                        $.ajax({
                                            type: 'POST',
                                            url: '@Url.Action("ShowError", "Parse")',
                                            data: { message: errorMes },
                                            dataType: 'html',
                                            success: function (data) {
                                                $("#result").html(data)
                                            }
                                        });
                                    }
                                });
                            });
                        },
                        error: function (error) {
                            var errorMes = error.responseText.substring(18, error.responseText.indexOf("\r"));
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("ShowError", "Parse")',
                                data: { message: errorMes },
                                dataType: 'html',
                                success: function (data) {
                                    $("#result").html(data)
                                }
                            });
                        }
                    });
                    $("#container_progress").attr('style', `display:none`);
                },
                error: function (result) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("ShowError", "Parse")',
                        data: { message: result },
                        dataType: 'html',
                        success: function (data) {
                            $("#result").html(data)
                            $("#container_progress").attr('style', `display:none`);
                        }
                    });
                },
                contentType: false,
                processData: false
            });
            return false;
        });

        function ChangeView(flag) {
            if (flag === 1) {
                document.getElementById('files').removeAttribute("hidden");
                document.getElementById('Edit').setAttribute("hidden", true);
                document.getElementById('AddToEstimate').setAttribute("hidden", true);
            }
            else if (flag === 2) {
                document.getElementById('Edit').removeAttribute("hidden");
                document.getElementById('files').setAttribute("hidden", true);
                document.getElementById('AddToEstimate').setAttribute("hidden", true);
            }
            else if (flag === 3) {
                document.getElementById('AddToEstimate').removeAttribute("hidden");
                document.getElementById('files').setAttribute("hidden", true);
                document.getElementById('Edit').setAttribute("hidden", true);

            }
        }
    </script>
}