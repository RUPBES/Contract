@using BusinessLayer.Models
@using BusinessLayer.Models.PRO
@using DatabaseLayer.Models.PRO
@using MvcLayer.Models
@inject BusinessLayer.Interfaces.ContractInterfaces.PRO.IKindOfWorkService KindOfWork
@inject BusinessLayer.Interfaces.ContractInterfaces.PRO.IAbbreviationKindOfWorkService AbbrKindOfWork
@model IndexViewModel
@{
    int backId = 0;
    if ((int)ViewData["returnContractId"] == 0)
        backId = (int)ViewData["contractId"];
    else backId = (int)ViewData["returnContractId"];
    var isWrite = false;
    var total = new Dictionary<string, EstimateViewResultBuilding>();
    var totalResult = new EstimateViewResultBuilding();
    string? val;
}

@section Table {
    <style>
           
        .square {
            width: 20px;
            height: 20px;
            margin-left: 1%;
            margin-right: 1%;
            border: solid black;
        }

        .overdue {
            background-color: #79a6fbb0 !important;
        }              

        h1 {                                                                                                                                                                                                                                                                                           transition: all 1s; */
            font-family: 'Ampersand', Montserrat, sans-serif;
            font-size: 32px;
        }
       
        .color_label {
            display: flex;
            font-weight: bold;
            box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
        }

        .label_postion {
            margin-top: 0.4%;
        }

        .wrapper-table {
            width: 100%;
        }

        .table-main tr:nth-child(even) {
            background-color: #ecf2f9;
        }

       /*  input {
            margin: 0;
            font-family: inherit;
            font-size: inherit;
            line-height: inherit;
            border-radius: 20px;
            padding: 0px 30px 0px 10px;
            box-shadow: rgba(0, 0, 0, 0.16) 0px 10px 36px 0px, rgba(0, 0, 0, 0.06) 0px 0px 0px 1px;
        } */

       /*  form {
            position: relative;
        } */

        .modal-content {
            display: flex;
            flex-direction: column;
            padding: 1em;
        }

        .chosen-container {
            width: auto !important;
            display: block;
            padding: .375rem .75rem;
            font-size: 1rem;
            font-weight: 400;
            line-height: 1.5;
            color: #212529;
            background-color: #fff;
            background-clip: padding-box;
            border: 1px solid #ced4da;
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            border-radius: .25rem;
            transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;
            flex: 1 1 auto;
        }

        .full-width {
            max-height: 80vh;
        }
    </style>
    <div class="header-view">
        <h1 class="list_agreement">Смета по договору №@ViewData["contractNumber"]</h1>
        <form asp-action="Index" asp-controller="Estimate" asp-route-contractId="@ViewData["contractId"]" style="display: flex;" asp-route-returnContractId="@ViewData["returnContractId"]">
            <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title">Поиск:</h3>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>

                        <div class="form-label">
                            <div class="input-group mb-3">
                                <label class="input-group-text" for="inputGroupSearch01">Шифр здания</label>
                                @foreach (KeyValuePair<string, string> item in ViewBag.CurrentSearchString)
                                {
                                    if (item.Key == "Шифр здания")
                                    {
                                        isWrite = true;
                                        <input class="form-control" name="SearchString[Шифр здания]" value="@item.Value" id="inputGroupSearch01" />

                                        break;
                                    }
                                }
                                @if (!isWrite)
                                {
                                    <input class="form-control" name="SearchString[Шифр здания]" value="" id="inputGroupSearch01" />
                                }
                                else
                                {
                                    isWrite = false;
                                }
                            </div>
                            <div class="input-group mb-3">

                                <label class="input-group-text" for="inputGroupSearch02">Название здания</label>
                                @foreach (KeyValuePair<string, string> item in ViewBag.CurrentSearchString)
                                {
                                    if (item.Key == "Название здания")
                                    {
                                        isWrite = true;
                                        <input class="form-control" name="SearchString[Название здания]" value="@item.Value" id="inputGroupSearch02" />
                                        break;
                                    }
                                }
                                @if (!isWrite)
                                {
                                    <input class="form-control" name="SearchString[Название здания]" value="" id="inputGroupSearch02" />
                                }
                                else
                                {
                                    isWrite = false;
                                }
                            </div>
                            <div class="input-group mb-3">

                                <label class="input-group-text" for="inputGroupSearch03">Подрядчик</label>
                                @foreach (KeyValuePair<string, string> item in ViewBag.CurrentSearchString)
                                {
                                    if (item.Key == "Подрядчик")
                                    {
                                        isWrite = true;
                                        <input class="form-control" name="SearchString[Подрядчик]" value="@item.Value" id="inputGroupSearch03" />
                                        break;
                                    }
                                }
                                @if (!isWrite)
                                {
                                    <input class="form-control" name="SearchString[Подрядчик]" value="" id="inputGroupSearch03" />
                                }
                                else
                                {
                                    isWrite = false;
                                }
                            </div>
                            <div class="input-group mb-3">

                                <label class="input-group-text" for="StartPeriodDrawing">Начало периода получения чертежа</label>
                                @foreach (KeyValuePair<string, string> item in ViewBag.CurrentSearchString)
                                {
                                    if (item.Key == "Начало периода получения чертежа")
                                    {
                                        isWrite = true;
                                        <input class="form-control" name="SearchString[Начало периода получения чертежа]" id="StartPeriodDrawing" value="@item.Value" />
                                        break;
                                    }
                                }
                                @if (!isWrite)
                                {
                                    <input class="form-control" name="SearchString[Начало периода получения чертежа]" id="StartPeriodDrawing" value="" />
                                }
                                else
                                {
                                    isWrite = false;
                                }
                            </div>
                            <div class="input-group mb-3">

                                <label class="input-group-text" for="EndPeriodDrawing">Конец периода получения чертежа</label>
                                @foreach (KeyValuePair<string, string> item in ViewBag.CurrentSearchString)
                                {
                                    if (item.Key == "Конец периода получения чертежа")
                                    {
                                        isWrite = true;
                                        <input class="form-control" name="SearchString[Конец периода получения чертежа]" id="EndPeriodDrawing" value="@item.Value" />
                                        break;
                                    }
                                }
                                @if (!isWrite)
                                {
                                    <input class="form-control" name="SearchString[Конец периода получения чертежа]" id="EndPeriodDrawing" value="" />
                                }
                                else
                                {
                                    isWrite = false;
                                }
                            </div>
                            <div class="input-group mb-3">

                                <label class="input-group-text" for="StartPeriodEstimate">Начало периода получения сметы</label>
                                @foreach (KeyValuePair<string, string> item in ViewBag.CurrentSearchString)
                                {
                                    if (item.Key == "Начало периода получения сметы")
                                    {
                                        isWrite = true;
                                        <input class="form-control" name="SearchString[Начало периода получения сметы]" id="StartPeriodEstimate" value="@item.Value" />
                                        break;
                                    }
                                }
                                @if (!isWrite)
                                {
                                    <input class="form-control" name="SearchString[Начало периода получения сметы]" id="StartPeriodEstimate" value="" />
                                }
                                else
                                {
                                    isWrite = false;
                                }
                            </div>
                            <div class="input-group mb-3">

                                <label class="input-group-text" for="EndPeriodEstimate">Конец периода получения сметы</label>
                                @foreach (KeyValuePair<string, string> item in ViewBag.CurrentSearchString)
                                {
                                    if (item.Key == "Конец периода получения сметы")
                                    {
                                        isWrite = true;
                                        <input class="form-control" name="SearchString[Конец периода получения сметы]" id="EndPeriodEstimate" value="@item.Value" />
                                        break;
                                    }
                                }
                                @if (!isWrite)
                                {
                                    <input class="form-control" name="SearchString[Конец периода получения сметы]" id="EndPeriodEstimate" value="" />
                                }
                                else
                                {
                                    isWrite = false;
                                }
                            </div>
                            <div class="input-group mb-3">

                                <label class="input-group-text" for="letterIndex">Буквенный индекс чертежей</label>
                                @foreach (KeyValuePair<string, List<int>> item in ViewBag.CurrentListSearchString)
                                {
                                    if (item.Key == "Буквенный индекс чертежей")
                                    {
                                        isWrite = true;
                                        <select class="js-chosen" multiple name="ListSearchString[Буквенный индекс чертежей]" id="letterIndex">
                                            @foreach (var itemAbr in AbbrKindOfWork.GetAll())
                                            {
                                                var IsGet = false;
                                                foreach (var value in item.Value)
                                                {
                                                    if (itemAbr.Id == value)
                                                    {
                                                        IsGet = true;
                                                        <option value="@itemAbr.Id" selected>@itemAbr.name</option>
                                                        break;
                                                    }
                                                }
                                                if (!IsGet)
                                                {
                                                    <option value="@itemAbr.Id">@itemAbr.name</option>
                                                }
                                            }
                                        </select>
                                    }
                                }
                                @if (!isWrite)
                                {
                                    <select class="js-chosen" multiple name="ListSearchString[Буквенный индекс чертежей]" id="letterIndex">
                                        @foreach (var itemAbr in AbbrKindOfWork.GetAll())
                                        {
                                            <option value="@itemAbr.Id">@itemAbr.name</option>
                                        }
                                    </select>
                                }
                                else
                                {
                                    isWrite = false;
                                }
                            </div>
                            <div class="input-group mb-3">

                                <label class="input-group-text" for="kindOfWork">Вид работы</label>
                                @{
                                    isWrite = false;
                                }
                                @foreach (KeyValuePair<string, List<int>> item in ViewBag.CurrentListSearchString)
                                {
                                    if (item.Key == "Вид работы")
                                    {
                                        isWrite = true;
                                        <select class="js-chosen" multiple id="kindOfWork" name="ListSearchString[Вид работы]">

                                            @foreach (var itemAbr in KindOfWork.GetAll())
                                            {
                                                var IsGet = false;
                                                foreach (var value in item.Value)
                                                {
                                                    if (itemAbr.Id == value)
                                                    {
                                                        IsGet = true;
                                                        <option value="@itemAbr.Id" selected>@itemAbr.name</option>
                                                        break;
                                                    }
                                                }
                                                if (!IsGet)
                                                {
                                                    <option value="@itemAbr.Id">@itemAbr.name</option>
                                                }
                                            }
                                        </select>
                                    }
                                }
                                @if (!isWrite)
                                {
                                    <select class="js-chosen" multiple id="kindOfWork" name="ListSearchString[Вид работы]">
                                        @foreach (var itemAbr in KindOfWork.GetAll())
                                        {
                                            <option value="@itemAbr.Id">@itemAbr.name</option>
                                        }
                                    </select>
                                }
                            </div>

                        </div>
                        <div class="modal-footer">
                            <button class="btn btn-primary" type="submit" title="Поиск организации" alt="Поиск организации">Поиск</button>

                            <button type="button" class="btn btn-warning" onclick="ClearFind()">Очистить фильтр</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="box-btn">
                <button class="btn btn-ctr btn-primary" type="button" data-bs-toggle="modal" data-bs-target="#staticBackdrop" >
                    <div>Поиск</div>
            </button>
            </div>
            <div class="box-btn">
                <a class="btn btn-ctr btn-success" asp-action="GetType"
                   asp-controller="Estimate" asp-route-contractId="@ViewData["contractId"]" asp-route-returnContractId="@ViewData["returnContractId"]">
                    <img class="icon" src="~/icons/plus-circle.svg"/>
                    <div >Добавить смету</div>
                </a>
            </div>
        </form>
    </div>
    <div class="full-width">
        <table class="table table-main table-main-short table-bordered table-hover table-condensed" id="contractTable">
            <thead>
                <tr>
                    <th>
                        Шифр здания, сооружения
                    </th>
                    <th>
                        Наименование здания, сооружения
                    </th>
                    <th>
                        Комплект чертежей
                    </th>
                    <th>
                        Наименование чертежа
                    </th>
                    <th>
                        Дата получения чертежа
                    </th>
                    <th>
                        Дата получения изменения чертежа
                    </th>
                    <th>
                        Номер сметы
                    </th>
                    <th>
                        Дата получения сметы
                    </th>
                    <th>
                        Дата получения изменения сметы
                    </th>
                    <th>
                        Стоимость по договору, руб.
                    </th>
                    <th>
                        Трудозатраты, чел/час
                    </th>
                    <th>
                        Выполнено СМР, руб.
                    </th>
                    <th>
                        Процент выполнения, %
                    </th>
                    <th>
                        Остаток СМР, руб.
                    </th>
                    <th>
                        Подрядчик
                    </th>
                    <th>
                        Дейсвия
                    </th>
                </tr>
            </thead>
            <tbody class="table_tbody">
                @foreach (EstimateViewModel item in Model.Objects)
                {
                    var indexObject = 0;
                    var indexNumber = 0;
                    foreach (var detail in item.DetailsView)
                    {
                        indexObject += detail.EstimateViewModelDrawnings.Count;
                    }
                    @*Первый чертеж по объекту*@
                    <tr>
                        <td rowspan="@indexObject" class="text-center align-middle">
                            @item.BuildingCode
                        </td>
                        <td rowspan="@indexObject" class="text-center align-middle">
                            @item.BuildingName
                        </td>
                        <td>
                            @item.DetailsView.First().EstimateViewModelDrawnings.First().DrawingsKit
                        </td>
                        <td rowspan="@item.DetailsView.First().EstimateViewModelDrawnings.Count">
                            @item.DetailsView.First().DrawingsName
                        </td>
                        <td rowspan="@item.DetailsView.First().EstimateViewModelDrawnings.Count" class="text-center align-middle">
                            @{
                                val = item.DetailsView.First().EstimateViewModelDrawnings.First().DrawingsDate?.ToString("dd MMMM yyyy");
                                if (item.DetailsView.First().EstimateViewModelDrawnings.First().DrawingsDate > new DateTime(1, 1, 1))
                                {
                                    @val
                                }
                            }
                        </td>
                        <td>
                            @*В первой строке дата принятия, дальше изменения*@
                        </td>
                        @if (item.DetailsView.First().EstimateViewModelDrawnings.First().Number != null)
                        {
                            <td rowspan="@item.DetailsView.First().NumberEntriesByEstimate[indexNumber]"
                                class="text-center align-middle">
                                @{
                                    val = item.DetailsView.First().EstimateViewModelDrawnings.First().Number;
                                    if (val is not null)
                                    {
                                        @val
                                    }
                                }
                            </td>


                            <td rowspan="@item.DetailsView.First().NumberEntriesByEstimate[indexNumber]"
                                class="text-center align-middle">
                                @{
                                    val = item.DetailsView.First().EstimateViewModelDrawnings.First().EstimateDate?.ToString("dd MMMM yyyy");
                                    if (item.DetailsView.First().EstimateViewModelDrawnings.First().EstimateDate > new DateTime(1, 1, 1))
                                    {
                                        @val
                                    }
                                }
                            </td>
                            <td rowspan="@item.DetailsView.First().NumberEntriesByEstimate[indexNumber]">
                                @*Дата изменения только при последующих*@
                            </td>
                            <td rowspan="@item.DetailsView.First().NumberEntriesByEstimate[indexNumber]"
                                class="text-end align-middle">
                                @{
                                    val = item.DetailsView.First().EstimateViewModelDrawnings.First().ContractsCost?.ToString("N2");
                                    if (item.DetailsView.First().EstimateViewModelDrawnings.First().Number is not null)
                                    {
                                        @val
                                    }
                                }
                            </td>
                            <td rowspan="@item.DetailsView.First().NumberEntriesByEstimate[indexNumber]"
                            class="text-end align-middle">
                                @{
                                    val = item.DetailsView.First().EstimateViewModelDrawnings.First().LaborCost?.ToString("N2");
                                    if (item.DetailsView.First().EstimateViewModelDrawnings.First().Number is not null)
                                    {
                                        @val
                                    }
                                }
                            </td>
                            <td rowspan="@item.DetailsView.First().NumberEntriesByEstimate[indexNumber]"
                            class="text-end align-middle">
                                @{
                                    val = item.DetailsView.First().EstimateViewModelDrawnings.First().DoneSmrCost?.ToString("N2");
                                    if (item.DetailsView.First().EstimateViewModelDrawnings.First().Number is not null)
                                    {
                                        @val
                                    }
                                }
                            </td>
                            <td rowspan="@item.DetailsView.First().NumberEntriesByEstimate[indexNumber]"
                                class="text-end align-middle">
                                @{
                                    val = item.DetailsView.First().EstimateViewModelDrawnings.First().PercentOfContrPrice?.ToString("N2");
                                    if (item.DetailsView.First().EstimateViewModelDrawnings.First().Number is not null)
                                    {
                                        @val
                                    }
                                }
                            </td>
                            <td rowspan="@item.DetailsView.First().NumberEntriesByEstimate[indexNumber]"
                                 class="text-end align-middle">
                                @{
                                    val = item.DetailsView.First().EstimateViewModelDrawnings.First().RemainsSmrCost?.ToString("N2");
                                    if (item.DetailsView.First().EstimateViewModelDrawnings.First().Number is not null)
                                    {
                                        @val
                                    }
                                }
                            </td>
                            indexNumber = indexNumber + 1;
                        }
                        <td class="text-center align-middle">
                            @item.DetailsView.First().EstimateViewModelDrawnings.First().SubContractor
                        </td>
                        <td>
                            <div class="icon edit" title="Редактировать смету">
                                <a asp-action="Edit" asp-route-id="@item.DetailsView.First().EstimateViewModelDrawnings.First().Id"
                                   asp-route-contractId="@ViewData["contractId"]" asp-route-returnContractId="@ViewData["returnContractId"]"></a>
                            </div>
                            <div class="icon file-add" title="Добавить смету с такими данными">
                                <a asp-action="CreateByEstimate" asp-route-id="@item.DetailsView.First().EstimateViewModelDrawnings.First().Id"
                                   asp-route-contractId="@ViewData["contractId"]" asp-route-returnContractId="@ViewData["returnContractId"]"></a>
                            </div>
                            <div class="icon delete" title="Удалить запись">
                                <a onclick="DeleteEstimate(@item.DetailsView.First().EstimateViewModelDrawnings.First().Id)"></a>
                            </div>
                        </td>
                    </tr>
                    @*Цикл прохождения по строкам первого чертежа*@
                    @foreach (var draw in item.DetailsView.First().EstimateViewModelDrawnings.Skip(1))
                    {
                        <tr>
                            <td>
                                @draw.DrawingsKit
                            </td>
                            <td class="text-center align-middle">
                                @{
                                    val = draw.DrawingsDate?.ToString("dd MMMM yyyy");
                                    if (draw.DrawingsDate > new DateTime(1, 1, 1))
                                    {
                                        @val
                                    }
                                }
                            </td>
                            @if (draw.Number != null)
                            {
                                <td rowspan="@item.DetailsView.First().NumberEntriesByEstimate[indexNumber]" class="text-center align-middle">
                                    @{
                                        val = draw.Number;
                                        if (val is not null)
                                        {
                                            @val
                                        }
                                    }
                                </td>
                                <td rowspan="@item.DetailsView.First().NumberEntriesByEstimate[indexNumber]" class="text-center align-middle">
                                    @{
                                        val = draw.EstimateDate?.ToString("dd MMMM yyyy");
                                        if (draw.Number is not null)
                                        {
                                            @val
                                        }
                                    }
                                </td>
                                <td rowspan ="@item.DetailsView.First().NumberEntriesByEstimate[indexNumber]" class="text-center align-middle">
                                </td>
                                <td rowspan="@item.DetailsView.First().NumberEntriesByEstimate[indexNumber]" class="text-end align-middle">
                                    @{
                                        val = draw.ContractsCost?.ToString("N2");
                                        if (draw.Number is not null)
                                        {
                                            @val
                                        }
                                    }
                                </td>
                                <td rowspan="@item.DetailsView.First().NumberEntriesByEstimate[indexNumber]" class="text-end align-middle">
                                    @{
                                        val = draw.LaborCost?.ToString("N2");
                                        if (draw.Number is not null)
                                        {
                                            @val
                                        }
                                    }
                                </td>
                                <td rowspan="@item.DetailsView.First().NumberEntriesByEstimate[indexNumber]" class="text-end align-middle">
                                    @{
                                        val = draw.DoneSmrCost?.ToString("N2");
                                        if (draw.Number is not null)
                                        {
                                            @val
                                        }
                                    }
                                </td>
                                <td rowspan="@item.DetailsView.First().NumberEntriesByEstimate[indexNumber]" class="text-end align-middle">
                                    @{
                                        val = draw.PercentOfContrPrice?.ToString("N2");
                                        if (draw.Number is not null)
                                        {
                                            @val
                                        }
                                    }
                                </td>
                                <td rowspan="@item.DetailsView.First().NumberEntriesByEstimate[indexNumber]" class="text-end align-middle">
                                    @{
                                        val = draw.RemainsSmrCost?.ToString("N2");
                                        if (draw.Number is not null)
                                        {
                                            @val
                                        }
                                    }
                                </td>
                                indexNumber = indexNumber + 1;
                            }
                            <td class="text-center align-middle">
                                @draw.SubContractor
                            </td>
                           
                            <td>
                                <div class="icon edit" title="Редактировать смету">
                                    <a asp-action="Edit" asp-route-id="@draw.Id" asp-route-contractId="@ViewData["contractId"]"
                                       asp-route-returnContractId="@ViewData["returnContractId"]"></a>
                                </div>
                                <div class="icon delete" title="Удалить запись">
                                    <a onclick="DeleteEstimate(@draw.Id)"></a>
                                </div>
                            </td>
                        </tr>
                    }
                    @*Цикл прохождения по чертежам*@
                    @foreach (var detail in item.DetailsView.Skip(1))
                    {
                        indexNumber = 0;
                        @*Первый чертеж по объекту*@
                        <tr>
                            <td>
                                @detail.EstimateViewModelDrawnings.First().DrawingsKit
                            </td>
                            <td rowspan="@detail.EstimateViewModelDrawnings.Count">
                                @detail.DrawingsName
                            </td>
                            <td rowspan="@detail.EstimateViewModelDrawnings.Count" class="text-center align-middle">
                                @{
                                    val = detail.EstimateViewModelDrawnings.First().DrawingsDate?.ToString("dd MMMM yyyy");
                                    if (detail.EstimateViewModelDrawnings.First().DrawingsDate > new DateTime(1, 1, 1))
                                    {
                                        @val
                                    }
                                }
                            </td>
                            <td>
                                @*Изменения со второй записи*@
                            </td>
                            @if (detail.EstimateViewModelDrawnings.First().Number != null)
                            {

                                <td rowspan="@detail.NumberEntriesByEstimate[indexNumber]" class="text-center align-middle">
                                    @{
                                        val = detail.EstimateViewModelDrawnings.First().Number;
                                        if (detail.EstimateViewModelDrawnings.First().Number is not null)
                                        {
                                            @val
                                        }
                                    }
                                </td>
                                <td rowspan="@detail.NumberEntriesByEstimate[indexNumber]" class="text-center align-middle">
                                    @{
                                        val = detail.EstimateViewModelDrawnings.First().EstimateDate?.ToString("dd MMMM yyyy");
                                        if (detail.EstimateViewModelDrawnings.First().EstimateDate > new DateTime(1, 1, 1))
                                        {
                                            @val
                                        }
                                    }
                                </td>
                                <td rowspan="@detail.NumberEntriesByEstimate[indexNumber]">
                                    @*Изменения со второй записи*@
                                </td>
                                <td rowspan="@detail.NumberEntriesByEstimate[indexNumber]" class="text-end align-middle">
                                    @{
                                        val = detail.EstimateViewModelDrawnings.First().ContractsCost?.ToString("N2");
                                        if (detail.EstimateViewModelDrawnings.First().Number is not null)
                                        {
                                            @val
                                        }
                                    }
                                </td>
                                <td rowspan="@detail.NumberEntriesByEstimate[indexNumber]" class="text-end align-middle">
                                    @{
                                        val = detail.EstimateViewModelDrawnings.First().LaborCost?.ToString("N2");
                                        if (detail.EstimateViewModelDrawnings.First().Number is not null)
                                        {
                                            @val
                                        }
                                    }
                                </td>
                                <td rowspan="@detail.NumberEntriesByEstimate[indexNumber]" class="text-end align-middle">
                                    @{
                                        val = detail.EstimateViewModelDrawnings.First().DoneSmrCost?.ToString("N2");
                                        if (detail.EstimateViewModelDrawnings.First().Number is not null)
                                        {
                                            @val
                                        }
                                    }
                                </td>
                                <td rowspan="@detail.NumberEntriesByEstimate[indexNumber]" class="text-end align-middle">
                                    @{
                                        val = detail.EstimateViewModelDrawnings.First().PercentOfContrPrice?.ToString("N2");
                                        if (detail.EstimateViewModelDrawnings.First().Number is not null)
                                        {
                                            @val
                                        }
                                    }
                                </td>
                                <td rowspan="@detail.NumberEntriesByEstimate[indexNumber]" class="text-end align-middle">
                                    @{
                                        val = detail.EstimateViewModelDrawnings.First().RemainsSmrCost?.ToString("N2");
                                        if (detail.EstimateViewModelDrawnings.First().Number is not null)
                                        {
                                            @val
                                        }
                                    }
                                </td>
                                indexNumber = indexNumber + 1;
                            }
                            <td class="text-center align-middle">
                                @detail.EstimateViewModelDrawnings.First().SubContractor
                            </td>
                            <td>
                                <div class="icon edit" title="Редактировать смету">
                                    <a asp-action="Edit" asp-route-id="@detail.EstimateViewModelDrawnings.First().Id"
                                       asp-route-contractId="@ViewData["contractId"]" asp-route-returnContractId="@ViewData["returnContractId"]"></a>
                                </div>
                                <div class="icon file-add" title="Добавить смету с такими данными">
                                    <a asp-action="CreateByEstimate" asp-route-id="@detail.EstimateViewModelDrawnings.First().Id"
                                       asp-route-contractId="@ViewData["contractId"]" asp-route-returnContractId="@ViewData["returnContractId"]"></a>
                                </div>
                                <div class="icon delete" title="Удалить запись">
                                    <a onclick="DeleteEstimate(@detail.EstimateViewModelDrawnings.First().Id)"></a>
                                </div>
                            </td>
                        </tr>
                        @*Цикл прохождения по строкам чертежа*@
                        @foreach (var draw in detail.EstimateViewModelDrawnings.Skip(1))
                        {
                            <tr>
                                <td>
                                    @draw.DrawingsKit
                                </td>
                                <td class="text-center align-middle">
                                    @{
                                        val = draw.DrawingsDate?.ToString("dd MMMM yyyy");
                                        if (draw.DrawingsDate > new DateTime(1, 1, 1))
                                        {
                                            @val
                                        }
                                    }
                                </td>
                                @if (draw.Number != null)
                                {
                                    <td rowspan="@detail.NumberEntriesByEstimate[indexNumber]" class="text-center align-middle">
                                        @{
                                            val = draw.Number;
                                            if (draw.Number is not null)
                                            {
                                                @val
                                            }
                                        }
                                    </td>
                                    <td rowspan="@detail.NumberEntriesByEstimate[indexNumber]" class="text-center align-middle">
                                        @{
                                            val = draw.EstimateDate?.ToString("dd MMMM yyyy");
                                            if (draw.EstimateDate > new DateTime(1, 1, 1))
                                            {
                                                @val
                                            }
                                        }
                                    </td>
                                    <td rowspan="@detail.NumberEntriesByEstimate[indexNumber]" class="text-end align-middle">
                                        @{
                                            val = draw.ContractsCost?.ToString("N2");
                                            if (draw.Number is not null)
                                            {
                                                @val
                                            }
                                        }
                                    </td>
                                    <td rowspan="@detail.NumberEntriesByEstimate[indexNumber]" class="text-end align-middle">
                                        @{
                                            val = draw.LaborCost?.ToString("N2");
                                            if (draw.Number is not null)
                                            {
                                                @val
                                            }
                                        }
                                    </td>
                                    <td rowspan="@detail.NumberEntriesByEstimate[indexNumber]" class="text-end align-middle">
                                        @{
                                            val = draw.DoneSmrCost?.ToString("N2");
                                            if (draw.Number is not null)
                                            {
                                                @val
                                            }
                                        }
                                    </td>
                                    <td rowspan="@detail.NumberEntriesByEstimate[indexNumber]" class="text-end align-middle">
                                        @{
                                            val = draw.PercentOfContrPrice?.ToString("N2");
                                            if (draw.Number is not null)
                                            {
                                                @val
                                            }
                                        }
                                    </td>
                                    <td rowspan="@detail.NumberEntriesByEstimate[indexNumber]" class="text-end align-middle">
                                        @{
                                            val = draw.RemainsSmrCost?.ToString("N2");
                                            if (draw.Number is not null)
                                            {
                                                @val
                                            }
                                        }
                                    </td>
                                    indexNumber = indexNumber + 1;
                                }
                                <td class="text-center align-middle">
                                    @draw.SubContractor
                                </td>

                                <td>
                                    <div class="icon edit" title="Редактировать смету">
                                        <a asp-action="Edit" asp-route-id="@draw.Id" asp-route-contractId="@ViewData["contractId"]"
                                           asp-route-returnContractId="@ViewData["returnContractId"]"></a>
                                    </div>

                                    <div class="icon delete" title="Удалить запись">
                                        <a onclick="DeleteEstimate(@draw.Id)"></a>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    var sumBuilding = new EstimateViewResultBuilding();
                    foreach (var result in item.report)
                    {
                        sumBuilding.RemainsSmrCost += result.Value.RemainsSmrCost;
                        sumBuilding.ContractsCost += result.Value.ContractsCost;
                        sumBuilding.DoneSmrCost += result.Value.DoneSmrCost;
                        sumBuilding.LaborCost += result.Value.LaborCost;
                        sumBuilding.PercentOfContrPrice += result.Value.PercentOfContrPrice;
                        if (!total.ContainsKey(result.Key))
                        {
                            var estimateViewResultBuilding = new EstimateViewResultBuilding();
                            estimateViewResultBuilding.RemainsSmrCost = result.Value.RemainsSmrCost;
                            estimateViewResultBuilding.DoneSmrCost = result.Value.DoneSmrCost;
                            estimateViewResultBuilding.ContractsCost = result.Value.ContractsCost;
                            estimateViewResultBuilding.PercentOfContrPrice = result.Value.PercentOfContrPrice;
                            estimateViewResultBuilding.LaborCost = result.Value.LaborCost;
                            total.Add(result.Key, estimateViewResultBuilding);
                        }
                        else
                        {
                            total[result.Key].ContractsCost += result.Value.ContractsCost;
                            total[result.Key].RemainsSmrCost += result.Value.RemainsSmrCost;
                            total[result.Key].DoneSmrCost += result.Value.DoneSmrCost;
                            total[result.Key].PercentOfContrPrice += result.Value.PercentOfContrPrice;
                            total[result.Key].LaborCost += result.Value.LaborCost;
                        }
                    }
                    <tr>
                        <td class="text-end" colspan="9">
                            Итого по зданию, сооружению:
                        </td>
                        <td class="text-end align-middle">
                            @sumBuilding.ContractsCost?.ToString("N2")
                        </td>
                        <td class="text-end align-middle">
                            @sumBuilding.LaborCost?.ToString("N2")
                        </td>
                        <td class="text-end align-middle">
                            @sumBuilding.DoneSmrCost?.ToString("N2")
                        </td>
                        <td class="text-end align-middle">
                            @sumBuilding.PercentOfContrPrice?.ToString("N2")
                        </td>
                        <td class="text-end align-middle">
                            @sumBuilding.RemainsSmrCost?.ToString("N2")
                        </td>
                        <td colspan="2">
                        </td>  
                        
                    </tr>
                    <tr>
                        <td class="text-end" colspan="9">
                            в том числе:
                        </td>
                        <td colspan="7">
                        </td>
                    </tr>
                    foreach (var result in item.report)
                    {
                        <tr>
                            <td class="text-end" colspan="9">
                                @result.Key
                            </td>
                            <td class="text-end align-middle">
                                @result.Value.ContractsCost?.ToString("N2")
                            </td>
                            <td class="text-end align-middle">
                                @result.Value.LaborCost?.ToString("N2")
                            </td>
                            <td class="text-end align-middle">
                                @result.Value.DoneSmrCost?.ToString("N2")
                            </td>
                            <td class="text-end align-middle">
                                @result.Value.PercentOfContrPrice?.ToString("N2")
                            </td>
                            <td class="text-end align-middle">
                                @result.Value.RemainsSmrCost?.ToString("N2")
                            </td>
                            <td colspan="2">
                            </td>                           
                        </tr>
                    }
                }
                @foreach (var item in total)
                {
                    totalResult.PercentOfContrPrice += item.Value.PercentOfContrPrice;
                    totalResult.LaborCost += item.Value.LaborCost;
                    totalResult.ContractsCost += item.Value.ContractsCost;
                    totalResult.DoneSmrCost += item.Value.DoneSmrCost;
                    totalResult.RemainsSmrCost += item.Value.RemainsSmrCost;
                }
                <tr>
                    <td class="text-end" colspan="9">
                        ВСЕГО по объекту:
                    </td>
                    <td class="text-end align-middle">
                        @totalResult.ContractsCost?.ToString("N2")
                    </td>
                    <td class="text-end align-middle">
                        @totalResult.LaborCost?.ToString("N2")
                    </td>
                    <td class="text-end align-middle">
                        @totalResult.DoneSmrCost?.ToString("N2")
                    </td>
                    <td class="text-end align-middle">
                        @totalResult.PercentOfContrPrice?.ToString("N2")
                    </td>
                    <td class="text-end align-middle">
                        @totalResult.RemainsSmrCost?.ToString("N2")
                    </td>
                    <td colspan="2"></td>                    
                </tr>
                <tr>
                    <td class="text-end" colspan="9">
                        в том числе:
                    </td>
                    <td colspan="7">
                    </td>
                </tr>
                @foreach (var item in total)
                {
                    <tr>
                        <td class="text-end" colspan="9">
                            @item.Key
                        </td>
                        <td class="text-end align-middle">
                            @item.Value.ContractsCost?.ToString("N2")
                        </td>
                        <td class="text-end align-middle">
                            @item.Value.LaborCost?.ToString("N2")
                        </td>
                        <td class="text-end align-middle">
                            @item.Value.DoneSmrCost?.ToString("N2")
                        </td>
                        <td class="text-end align-middle">
                            @item.Value.PercentOfContrPrice?.ToString("N2")
                        </td>
                        <td class="text-end align-middle">
                            @item.Value.RemainsSmrCost?.ToString("N2")
                        </td>
                        <td colspan="2">
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@section Scripts {
    <script>
        $("#StartPeriodDrawing").datepicker({
            format: "d MM yyyy",
            language: "ru",
            calendarWeeks: true,
            autoclose: true,
            keyboardNavigation: false,
            assumeNearbyYear: true,
            toggleActive: true
        });
        $("#EndPeriodDrawing").datepicker({
            format: "d MM yyyy",
            language: "ru",
            calendarWeeks: true,
            autoclose: true,
            keyboardNavigation: false,
            assumeNearbyYear: true,
            toggleActive: true
        });
        $("#StartPeriodEstimate").datepicker({
            format: "d MM yyyy",
            language: "ru",
            calendarWeeks: true,
            autoclose: true,
            keyboardNavigation: false,
            assumeNearbyYear: true,
            toggleActive: true
        });
        $("#EndPeriodEstimate").datepicker({
            format: "d MM yyyy",
            language: "ru",
            calendarWeeks: true,
            autoclose: true,
            keyboardNavigation: false,
            assumeNearbyYear: true,
            toggleActive: true
        });

        function ClearFind() {
            $('#inputGroupSearch01').val('');
            $('#inputGroupSearch02').val('');
            $('#inputGroupSearch03').val('');
            $('#StartPeriodDrawing').val('');
            $('#EndPeriodDrawing').val('');
            $('#StartPeriodEstimate').val('');
            $('#EndPeriodEstimate').val('');
            $('#letterIndex option').prop('selected', false).trigger('chosen:updated');
            $('#kindOfWork option').prop('selected', false).trigger('chosen:updated');
        }

        function DeleteEstimate(val) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ShowDeleteMessage", "Home")',
                contentType: "application/html; charset=utf-8",
                dataType: 'html',
                success: function (result) {
                    $('#dialogContent').html(result);
                    $('#modDialog').modal({ backdrop: false });
                    $('#modDialog').modal('show');

                    let elementDeleteButton = document.querySelectorAll('#modal-button-delete')
                    elementDeleteButton[0].addEventListener('click', () => {
                        $.ajax({
                            type: 'GET',
                            url: '@Url.Action("Delete", "Estimate")',
                            data: { id: val },
                            success: function (result) {
                                $('#dialogContent').html(result);
                            },
                            error: function (result) {
                                $.ajax({
                                    type: 'POST',
                                    url: '@Url.Action("Message", "Home")',
                                    dataType: 'html',
                                    data: { message: "Во время удаления произошла ошибка.", header: "Ошибка", textButton: "Плохо" },
                                    success: function (result) {
                                        $('#dialogContent').html(result);
                                    }
                                });
                            }
                        });
                    })
                },
                error: function (result) {
                    alert("Ошибка отображения");
                }
            })
        }
    </script>
}