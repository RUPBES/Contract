@model MvcLayer.Models.ActViewModel
@inject BusinessLayer.Interfaces.ContractInterfaces.IContractService Contract


<style>
    .dm-modal {
        background-color: lightsteelblue;
    }

    .close-btn {
        color: red;
    }

    .close-btn::after {
            border: 2px solid #F00 !important;
        }

    .close-btn:hover::after {
            border-color: red !important;
            color: red !important;
            -webkit-transform: scale(1);
            -moz-transform: scale(1);
            -ms-transform: scale(1);
            transform: scale(1);
            font-weight: bold;
        }
    .btn_add {
            text-align: right;
        }
</style>
@{
    ViewData["Title"] = "Добавить акт приостановки/возобновления";
    int backId = 0;
    if (ViewBag.returnContractId == 0)
        backId = ViewBag.contractId;
    else backId = ViewBag.returnContractId;
    var contid = ViewBag.contractId;
    var contract = contid is not null && (int)contid > 0 ? Contract.GetById((int)contid) : null;
}

<div class="dm-overlay">
    <div class="dm-table">
        <div class="dm-cell">
            <div class="dm-modal" style="max-width:960px;">
                <div class="top-modal-block">
                    <label class="my-modal-title">@ViewData["Title"] для договора @contract?.Number</label>
                    @if (backId != null && backId > 0)
                    {
                        <a asp-controller="Contracts" asp-action="Details" asp-route-id="@backId" class="close-btn"></a>
                    }
                    @if (backId == null || backId == 0)
                    {
                        <a asp-controller="Contracts" asp-action="" class="close-btn"></a>
                    }
                </div>
                <hr class="modal-line" />
                <form asp-action="Create" asp-route-returnContractId="@ViewBag.returnContractId" class="row" enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input asp-for="ContractId" value="@contract?.Id" hidden>
                    <div class="form-group col-6">
                        <label asp-for="Reason" class="control-label"></label>
                        <input asp-for="Reason" class="form-control" />
                        <span asp-validation-for="Reason" class="text-danger"></span>
                    </div>
                    <div class="form-group col-6">
                        <label asp-for="DateAct" class="control-label"></label>
                        <input asp-for="DateAct" class="form-control" type="text" required id="DateAct" />
                        <span asp-validation-for="DateAct" class="text-danger"></span>
                    </div>
                    <div class="form-group col-6">
                        <label asp-for="DateSuspendedFrom" class="control-label"></label>
                        <input asp-for="DateSuspendedFrom" class="form-control" type="text" id="DateSuspendedFrom" />
                        <span asp-validation-for="DateSuspendedFrom" class="text-danger"></span>
                    </div>
                    <div class="form-group col-6">
                        <label asp-for="DateSuspendedUntil" class="control-label"></label>
                        <input asp-for="DateSuspendedUntil" class="form-control" type="text" id="DateSuspendedUntil" />
                        <span asp-validation-for="DateSuspendedUntil" class="text-danger"></span>
                    </div>
                    <div class="form-group col-6">
                        <label asp-for="DateRenewal" class="control-label"></label>
                        <input asp-for="DateRenewal" class="form-control" type="text" id="DateRenewal" />
                        <span asp-validation-for="DateRenewal" class="text-danger"></span>
                    </div>
                    <div class="form-group col-6">
                        <label>Приостановлено?</label>
                        <input name="IsSuspension" id="checkActId" type="checkbox" />
                    </div>                    
                    <div class="form-group col-6">
                        <label asp-for="FilesEntity" class="control-label"></label>
                        <input name="FilesEntity" type="file" class="form-control" />                        
                    </div>
                    <div class="form-group mt-3 btn_add">
                        <input type="submit" value="Добавить" class="btn btn-primary col-3" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $("#checkActId").on("change", function () {
            let isChange = $(this).prop('checked');
            if (isChange === false) {
                $(this).attr("value", "false")
            }
            else {
                $(this).attr("value", "true")
            }
        });
        $("#DateAct").datepicker({
            format: "d MM yyyy",
            language: "ru",
            calendarWeeks: true,
            autoclose: true,
            keyboardNavigation: false,
            assumeNearbyYear: true,
            toggleActive: true,
            todayHighlight: true
        });
        $("#DateSuspendedFrom").datepicker({
            format: "d MM yyyy",
            language: "ru",
            calendarWeeks: true,
            autoclose: true,
            keyboardNavigation: false,
            assumeNearbyYear: true,
            toggleActive: true,
            todayHighlight: true
        }).on('changeDate', function () {
            changeDateBeg()
        });
        $("#DateSuspendedUntil").datepicker({
            format: "d MM yyyy",
            language: "ru",
            calendarWeeks: true,
            autoclose: true,
            keyboardNavigation: false,
            assumeNearbyYear: true,
            toggleActive: true,
            todayHighlight: true
        }).on('changeDate', function () {
            changeDateEnd()
        });
        $("#DateRenewal").datepicker({
            format: "d MM yyyy",
            language: "ru",
            calendarWeeks: true,
            autoclose: true,
            keyboardNavigation: false,
            assumeNearbyYear: true,
            toggleActive: true,
            todayHighlight: true
        }).on('changeDate', function () {
            changeDateRenew()
        });

        function changeDateBeg() {
            let dateBeg = $("#DateSuspendedFrom").datepicker('getDate');
            let dateEnd = $("#DateSuspendedUntil").datepicker('getDate');
            let dateRenew = $("#DateRenewal").datepicker('getDate');

            if (dateBeg != null) {
                let datePlusOne = addDays(new Date(dateBeg.toDateString('d-MM-yyyy')), 1);
                let datePlusTwo = addDays(new Date(dateBeg.toDateString('d-MM-yyyy')), 2);
                if (dateEnd != null && dateBeg >= dateEnd) { $("#DateSuspendedUntil").datepicker('update', datePlusOne); }
                if (dateRenew != null && dateBeg >= dateRenew) { $("#DateRenewal").datepicker('update', datePlusTwo); }
            }
        }
        function changeDateEnd() {
            let dateBeg = $("#DateSuspendedFrom").datepicker('getDate');
            let dateEnd = $("#DateSuspendedUntil").datepicker('getDate');
            let dateRenew = $("#DateRenewal").datepicker('getDate');

            if (dateEnd != null) {
                let datePlusOne = addDays(new Date(dateEnd.toDateString('d-MM-yyyy')), 1);
                let dateDecOne = addDays(new Date(dateEnd.toDateString('d-MM-yyyy')), -1);
                if (dateBeg != null && dateBeg >= dateEnd) { $("#DateSuspendedFrom").datepicker('update', dateDecOne); }
                if (dateRenew != null && dateEnd >= dateRenew) { $("#DateRenewal").datepicker('update', datePlusOne); }
            }
        }
        function changeDateRenew() {
            let dateBeg = $("#DateSuspendedFrom").datepicker('getDate');
            let dateEnd = $("#DateSuspendedUntil").datepicker('getDate');
            let dateRenew = $("#DateRenewal").datepicker('getDate');

            if (dateRenew != null) {
                let dateDecTwo = addDays(new Date(dateRenew.toDateString('d-MM-yyyy')), -2);
                let dateDecOne = addDays(new Date(dateRenew.toDateString('d-MM-yyyy')), -1);
                if (dateBeg != null && dateBeg >= dateRenew) { $("#DateSuspendedFrom").datepicker('update', dateDecTwo); }
                if (dateEnd != null && dateEnd >= dateRenew) { $("#DateSuspendedUntil").datepicker('update', dateDecOne); }
            }
        }

        document.querySelector("#DateSuspendedFrom").addEventListener("change", (e) => {
            changeDateBeg();
        });
        document.querySelector("#DateSuspendedUntil").addEventListener('change', (e) => {
            changeDateEnd();
        });
        document.querySelector("#DateRenewal").addEventListener('change', (e) => {
            changeDateRenew();
        });
        function addDays(date, countDays) {
            let newDateOfyear = date.getFullYear() + ""; // год
            let day = date.getDate() + countDays; // текущий день
            let month = date.getMonth() + 1; //текущий месяц   
            let maxDateToday = new Date(newDateOfyear, month, 0).getDate()
            if (day > maxDateToday) {
                month = month + 1;
                if (month > 12) {
                    newDateOfyear = newDateOfyear + 1;
                    month = 1;
                    day = (day - 31);
                }
                else {
                    day = (day - maxDateToday);
                }
            }
            if (day < 1) {
                month = month - 1;
                if (month < 1) {
                    newDateOfyear = newDateOfyear - 1;
                    month = 12;
                    day = 31 + day;
                }
                else {
                    let maxDate = new Date(newDateOfyear, month, 0).getDate();
                    day = maxDate + day;
                }
            }

            let dayStr = day < 10 ? "0" + String(day) : String(day);
            let monthStr = month < 10 ? "0" + String(month) : String(month);
            return dayStr + '-' + monthStr + '-' + newDateOfyear;
        }
    </script>
}

