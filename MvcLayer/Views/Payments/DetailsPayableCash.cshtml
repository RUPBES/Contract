@using BusinessLayer.Helpers;
@model IEnumerable<MvcLayer.Models.Reports.GetPayableCashPaymentsViewModel>
@inject BusinessLayer.Interfaces.ContractInterfaces.IContractService Contract
@inject BusinessLayer.Interfaces.ContractInterfaces.IPaymentService Payment
@inject BusinessLayer.Interfaces.ContractInterfaces.ISWCostService SWCosts
@inject BusinessLayer.Interfaces.ContractInterfaces.IFormService Form
@{
    ViewData["Title"] = "Денежные средства по договорам, подлежащие к оплате";
    DateTime startPeriod = new DateTime(4000, 1, 1);
    DateTime endPeriod = new DateTime(1000, 1, 1);
    foreach (var item in Model)
    {
        if (item.dateBeginWork != null)
        {
            if (startPeriod > item.dateBeginWork)
            {
                startPeriod = (DateTime)item.dateBeginWork;
            }
        }

        if (item.dateEndWork != null)
        {
            if (endPeriod < item.dateEndWork)
            {
                endPeriod = (DateTime)item.dateEndWork;
            }
        }
    }
}
@section Table {
<style>
    table {
        text-align: center;
    }

    .wrapper-table {
        width: 100%;
        overflow: auto;
    }

        .wrapper-table tbody, td, tfoot, th, thead, tr {
            border-color: #373b3e;
            border-style: solid;
            border-width: 0;
        }

        .wrapper-table table td:first-child {
            position: sticky;
            z-index: 10;
            left: -1px;
            background-color: #adadad;
        }

        .wrapper-table table tr:first-child th:first-child {
            position: sticky;
            z-index: 1000;
            left: -1px;
            top: 0;
        }

        .wrapper-table thead {
            position: sticky;
            z-index: 20;
            left: 0;
            top: 0;
            opacity: 1;
            border-color: #373b3e;
        }

    .second-td-elem {
        /* z-index: 5 !important; */
        box-shadow: inset 0 0 0 9999px #bdbac3 !important;
        background-color: grey !important;
    }

    .Agreement {
        background-color: #ccf3ff !important;
    }

    .SubContract {
        background-color: #d8f3d8 !important;
    }

    .Multiple {
        background-color: lightsalmon !important;
    }

    .square {
        width: 30px;
        height: 30px;
        border: solid;
        margin-left: 1%;
        margin-right: 0.5%;
    }

    .square_container {
        display: flex;
        font-weight: bold;
        margin-top: 1%;
        margin-bottom: 1%;
        box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
        padding: 1%;
    }

    h3 {
        text-shadow: -1px -1px #FFF, -2px -2px #FFF, -1px 1px #FFF, -2px 2px #FFF, 1px 1px #FFF, 2px 2px #FFF, 1px -1px #FFF, 2px -2px #FFF, -3px -3px 2px #BBB, -3px 3px 2px #BBB, 3px 3px 2px #BBB, 3px -3px 2px #BBB;
        color: #004d8e;
        transition: all 1s;
        font-family: 'Ampersand', Montserrat, sans-serif;
        font-size: 3vh;
        margin-left: 1%;
    }
</style>


   <h3>@ViewData["Title"]</h3>


                <hr class="modal-line" />
                <div class="wrapper-table">
                    <table class="table table-bordered table-main table-main-short">
                        <thead class="text-center text-white align-top" style="position:sticky">
                            <tr>
                                <th rowspan="2">
                                    Номер и дата договора
                                </th>
                                <th rowspan="2">
                                    Наименование объекта
                                </th>
                                <th rowspan="2">
                                    Заказчик
                                </th>
                                <th rowspan="2">
                                    Генподрядчик (филиал-исполнитель по приказу)
                                </th>
                                <th rowspan="2">
                                    Субподрядчик (филиал-исполнитель по приказу)
                                </th>
                                <th rowspan="2">
                                    Сроки выполнения работ
                                </th>
                                <th rowspan="2">
                                    Срок ввода
                                </th>
                                <th rowspan="2">
                                    Валюта расчетов
                                </th>
                                <th rowspan="2">
                                    Контракная договорная цена, с учетом НДС
                                </th>
                                <th rowspan="2">
                                    Остаток по выполнению от стоимости контрактной цены
                                </th>
                                <th rowspan="2">
                                    Объем на текущий год
                                </th>
                                <th rowspan="2">
                                    Фактическое выполнение по справке С-3а, в т.ч.
                                </th>
                                @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth(iterator, endPeriod); iterator = iterator.AddMonths(1))
                                {
                                    <th colspan="2">
                                        @iterator.ToString("MMMM yyyy")
                                    </th>
                                }
                            </tr>

                            <tr>
                                @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth(iterator, endPeriod); iterator = iterator.AddMonths(1))
                                {
                                    <th>
                                        к оплате
                                    </th>
                                    <th>
                                        из них на счет РУП "БЭС"-УКХ"
                                    </th>
                                }
                            </tr>
                        </thead>
                        <tbody style="max-height:70vh;">
                            @foreach (var item in Model.Where(m => m.typeContract == "Main"))
                            {
                                <tr>
                                    <td>
                                        @item?.number <br>
                                        от<br>
                                        @item?.dateContract?.ToShortDateString()
                                    </td>
                                    <td>
                                        @item?.nameObject
                                    </td>
                                    <td>
                                        @item.client
                                    </td>
                                    <td>
                                        @item.genContractor
                                    </td>
                                    <td>
                                        @item.subContractor
                                    </td>
                                    <td>
                                        @item?.dateBeginWork?.ToShortDateString() - @item?.dateEndWork?.ToShortDateString()
                                    </td>
                                    <td>
                                        @item?.dateEnter?.ToShortDateString()
                                    </td>
                                    <td>
                                        @item?.currency
                                    </td>
                                    <td class="text-end">
                                        @item.contractPrice?.ToString("N2")
                                    </td>
                                    <td class="text-end">
                                        @item.remainingWork?.ToString("N2")
                                    </td>
                                    <td class="text-end">
                                        @item.currentYearScopeWork?.ToString("N2")
                                    </td>
                                    <td class="text-end">
                                        @item.factWorkByC3A?.ToString("N2")
                                    </td>

                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth(iterator,endPeriod); 
                                    iterator = iterator.AddMonths(1))
                                    {
                                        var itemPayment = item.listPayments.Where(p => Checker.EquallyDateByMonth((DateTime)p.period, iterator)).FirstOrDefault();
                                        if (itemPayment != null)
                                        {
                                            <td class="text-end">
                                                @if (itemPayment.payment != null)
                                                {
                                                    <span>@itemPayment.payment?.ToString("N2")</span>
                                                }
                                            </td>
                                            <td class="text-end">
                                                @if (itemPayment.paymentRupBes != null)
                                                {
                                                    <span>@itemPayment.paymentRupBes?.ToString("N2")</span>
                                                }
                                            </td>
                                        }
                                        else
                                        {
                                            <td></td>
                                            <td></td>
                                        }
                                    }
                                </tr>
                            }

                            @foreach (var item in Model.Where(m => m.typeContract == "Agr"))
                            {                               
                                <tr class="Agreement">
                                    <td>
                                        @item?.number <br>
                                        от<br>
                                        @item?.dateContract?.ToShortDateString()
                                    </td>
                                    <td>
                                        @item?.nameObject
                                    </td>
                                    <td>
                                        @item.client
                                    </td>
                                    <td>
                                        @item.genContractor
                                    </td>
                                    <td>
                                        @item.subContractor
                                    </td>
                                    <td>
                                        @item?.dateBeginWork?.ToShortDateString() - @item?.dateEndWork?.ToShortDateString()
                                    </td>
                                    <td>
                                        @item?.dateEnter?.ToShortDateString()
                                    </td>
                                    <td>
                                        @item?.currency
                                    </td>
                                    <td class="text-end">
                                        @item.contractPrice?.ToString("N2")
                                    </td>
                                    <td class="text-end">
                                        @item.remainingWork?.ToString("N2")
                                    </td>
                                    <td class="text-end">
                                        @item.currentYearScopeWork?.ToString("N2")
                                    </td>
                                    <td class="text-end">
                                        @item.factWorkByC3A?.ToString("N2")
                                    </td>

                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth(iterator, endPeriod);
                                   iterator = iterator.AddMonths(1))
                                    {
                                        var itemPayment = item.listPayments.Where(p => Checker.EquallyDateByMonth((DateTime)p.period, iterator)).FirstOrDefault();
                                        if (itemPayment != null)
                                        {
                                            <td class="text-end">
                                                @if (itemPayment.payment != null)
                                                {
                                                    <span>@itemPayment.payment?.ToString("N2")</span>
                                                }
                                            </td>
                                            <td class="text-end">
                                                @if (itemPayment.paymentRupBes != null)
                                                {
                                                    <span>@itemPayment.paymentRupBes?.ToString("N2")</span>
                                                }
                                            </td>
                                        }
                                        else
                                        {
                                            <td></td>
                                            <td></td>
                                        }
                                    }
                                </tr>
                            }

                            @foreach (var item in Model.Where(m => m.typeContract == "Sub"))
                            {                               
                                <tr class="SubContract">
                                    <td>
                                        @item?.number <br>
                                        от<br>
                                        @item?.dateContract?.ToShortDateString()
                                    </td>
                                    <td>
                                        @item?.nameObject
                                    </td>
                                    <td>
                                        @item.client
                                    </td>
                                    <td>
                                        @item.genContractor
                                    </td>
                                    <td>
                                        @item.subContractor
                                    </td>
                                    <td>
                                        @item?.dateBeginWork?.ToShortDateString() - @item?.dateEndWork?.ToShortDateString()
                                    </td>
                                    <td>
                                        @item?.dateEnter?.ToShortDateString()
                                    </td>
                                    <td>
                                        @item?.currency
                                    </td>
                                    <td class="text-end">
                                        @item.contractPrice?.ToString("N2")
                                    </td>
                                    <td class="text-end">
                                        @item.remainingWork?.ToString("N2")
                                    </td>
                                    <td class="text-end">
                                        @item.currentYearScopeWork?.ToString("N2")
                                    </td>
                                    <td class="text-end">
                                        @item.factWorkByC3A?.ToString("N2")
                                    </td>

                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth(iterator, endPeriod);
                                   iterator = iterator.AddMonths(1))
                                    {
                                        var itemPayment = item.listPayments.Where(p => Checker.EquallyDateByMonth((DateTime)p.period, iterator)).FirstOrDefault();
                                        if (itemPayment != null)
                                        {
                                            <td class="text-end">
                                                @if (itemPayment.payment != null)
                                                {
                                                    <span>@itemPayment.payment?.ToString("N2")</span>
                                                }
                                            </td>
                                            <td class="text-end">
                                                @if (itemPayment.paymentRupBes != null)
                                                {
                                                    <span>@itemPayment.paymentRupBes?.ToString("N2")</span>
                                                }
                                            </td>
                                        }
                                        else
                                        {
                                            <td></td>
                                            <td></td>
                                        }
                                    }
                                </tr>
                            }

                            @foreach (var item in Model.Where(m => m.typeContract == "Obj"))
                            {                                
                                <tr class="Multiple">
                                    <td>
                                        @item?.number <br>
                                        от<br>
                                        @item?.dateContract?.ToShortDateString()
                                    </td>
                                    <td>
                                        @item?.nameObject
                                    </td>
                                    <td>
                                        @item.client
                                    </td>
                                    <td>
                                        @item.genContractor
                                    </td>
                                    <td>
                                        @item.subContractor
                                    </td>
                                    <td>
                                        @item?.dateBeginWork?.ToShortDateString() - @item?.dateEndWork?.ToShortDateString()
                                    </td>
                                    <td>
                                        @item?.dateEnter?.ToShortDateString()
                                    </td>
                                    <td>
                                        @item?.currency
                                    </td>
                                    <td class="text-end">
                                        @item.contractPrice?.ToString("N2")
                                    </td>
                                    <td class="text-end">
                                        @item.remainingWork?.ToString("N2")
                                    </td>
                                    <td class="text-end">
                                        @item.currentYearScopeWork?.ToString("N2")
                                    </td>
                                    <td class="text-end">
                                        @item.factWorkByC3A?.ToString("N2")
                                    </td>

                                    @for (var iterator = startPeriod; Checker.LessOrEquallyFirstDateByMonth(iterator, endPeriod);
                                   iterator = iterator.AddMonths(1))
                                    {
                                        var itemPayment = item.listPayments.Where(p => Checker.EquallyDateByMonth((DateTime)p.period, iterator)).FirstOrDefault();
                                        if (itemPayment != null)
                                        {
                                            <td class="text-end">
                                                @if (itemPayment.payment != null)
                                                {
                                                    <span>@itemPayment.payment?.ToString("N2")</span>
                                                }
                                            </td>
                                            <td class="text-end">
                                                @if (itemPayment.paymentRupBes != null)
                                                {
                                                    <span>@itemPayment.paymentRupBes?.ToString("N2")</span>
                                                }
                                            </td>
                                        }
                                        else
                                        {
                                            <td></td>
                                            <td></td>
                                        }
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
    <div class="square_container">
        <div class="square Agreement"></div>
        <label> - Соглашения с филиалом </label>
        <div class="square SubContract k-ml-1"></div>
        <label> - Договор Субподряда </label>
        <div class="square Multiple k-ml-1"></div>
        <label> - Подобъект</label>
    </div>
}

